PHP SIDE,
<?php
if (!defined('ABSPATH')) {
                die('Kangaroos cannot jump here');
}

//$table_prefix = $wpdb->prefix;
/**
* admin_menu  side menu of plugin .
*
* Example: 'export ,import'
*
* add_menu_link  function of hooks .
*/

add_action('admin_menu', 'add_menu_link');
function add_menu_link()
{

                add_menu_page('WPBackupDeluxe', 'WPBackupDeluxe', 'manage_options', 'my-menu');
                add_submenu_page('my-menu', 'Backup', 'Backup', 'manage_options', 'my-menu', 'View_export_list');
                add_submenu_page('my-menu', 'Import', 'Import', 'manage_options', 'my-menu2', 'view_import_list');
                add_submenu_page('my-menu', 'Schedule', 'Schedule', 'manage_options', 'my-menu3', 'schdule_option');
                add_submenu_page('my-menu', 'Local Backup', 'Local Backup', 'manage_options', 'backupschdule', 'backup_schdule');
                add_submenu_page('my-menu', 'Ftp Backup', 'Ftp Backup', 'manage_options', 'ftpbackup', 'ftp_backup');
                
                
                
}
function totalsize($size)
{
                
                $units = array('B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');
                $power = $size > 0 ? floor(log($size, 1024)) : 0;
                return $fileSize = round($size / 1024 / 1024 / 1024,4);
}

add_action('admin_head', 'my_custom_admin_head');
/**
*  admin_head       hook load when admin login and load all css files .
                
*  wp_enqueue_style  load css files.
*/
function my_custom_admin_head()
{

                wp_enqueue_style('bootstrapcss', plugin_dir_url(__FILE__) . 'includes/view/assest/css/bootstrap.min.css');
                wp_enqueue_style('custom-css', plugin_dir_url(__FILE__) . 'includes/view/assest/css/custom.css');
                wp_enqueue_style('font-awesome', plugin_dir_url(__FILE__) . 'includes/view/assest/css/font-awesome.min.css');
}
/**
*  admin_footer       hook load when admin login and load all javascript files .
*  ajaxurl            provide ajax url  in funtions.php file.
*  wp_enqueue_script  load javascript files.
*/
add_action('admin_footer', 'my_enqueue');
function my_enqueue()
{

                $script_data_array = array(
                                'ajaxurl' => admin_url('admin-ajax.php'),
                );
                wp_localize_script('custom-script', 'blog', $script_data_array);
                wp_enqueue_script('custom-script');
                wp_enqueue_script('exportjs', plugin_dir_url(__FILE__) . 'includes/view/assest/js/export.js');
                wp_enqueue_script('importjs', plugin_dir_url(__FILE__) . 'includes/view/assest/js/import.js');
                wp_enqueue_script('jqueryminjs', plugin_dir_url(__FILE__) . 'includes/view/assest/js/jquery.min.js');
                wp_enqueue_script('bootstrapmnjs', plugin_dir_url(__FILE__) . 'includes/view/assest/js/bootstrap.min.js');
                wp_enqueue_script('customjs', plugin_dir_url(__FILE__) . 'includes/view/assest/js/custom.js');
                wp_enqueue_script('schdulejs', plugin_dir_url(__FILE__) . 'includes/view/assest/js/schdule.js');
                wp_enqueue_script('sweetalertjs', plugin_dir_url(__FILE__) . 'includes/view/assest/js/sweetalert.min.js');
}
function ftp_credential($arg)
{
                $curl = curl_init();
                curl_setopt_array($curl, array(
                                CURLOPT_URL => 'http://127.0.0.1:8000/api/fetch_ftp_credential',
                                CURLOPT_RETURNTRANSFER => true,
                                CURLOPT_ENCODING => '',
                                CURLOPT_MAXREDIRS => 10,
                                CURLOPT_TIMEOUT => 0,
                                CURLOPT_FOLLOWLOCATION => true,
                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                CURLOPT_CUSTOMREQUEST => 'POST',
                                CURLOPT_POSTFIELDS => $arg,
                ));

                $response = curl_exec($curl);
    
                curl_close($curl);

                $apiresponse = json_decode($response, true);
                return $apiresponse;
}
/**
* schdule start history
*/
function schdule_start_history($arg)
{
                global $wpdb;
                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
                $arg['licence_key'] = $checklicensekey->option_value;
                $curl = curl_init();
                curl_setopt_array($curl, array(
                                CURLOPT_URL => 'http://127.0.0.1:8000/api/backuphistory',
                                CURLOPT_RETURNTRANSFER => true,
                                CURLOPT_ENCODING => '',
                                CURLOPT_MAXREDIRS => 10,
                                CURLOPT_TIMEOUT => 0,
                                CURLOPT_FOLLOWLOCATION => true,
                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                CURLOPT_CUSTOMREQUEST => 'POST',
                                CURLOPT_POSTFIELDS => $arg,
                ));

                $response = curl_exec($curl);

                curl_close($curl);

                $apiresponse = json_decode($response, true);
}
/**
*  secretkey    Methord used show enter secreate key .

 */
function secretkey()
{
                require_once plugin_dir_path(__FILE__) . 'includes/view/secretkey/index.php';
}

/**
*  secretkey    Methord used to check api response secrete key valid .

 */
function check_license_key_exipire($lisencekey,$opration)
{


                $curl = curl_init();
                curl_setopt_array($curl, array(
                                CURLOPT_URL => 'http://127.0.0.1:8000/api/checklicense',
                                CURLOPT_RETURNTRANSFER => true,
                                CURLOPT_ENCODING => '',
                                CURLOPT_MAXREDIRS => 10,
                                CURLOPT_TIMEOUT => 0,
                                CURLOPT_FOLLOWLOCATION => true,
                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                CURLOPT_CUSTOMREQUEST => 'POST',
                                CURLOPT_POSTFIELDS => array('licence_key' => $lisencekey, 'domain_name' => $_SERVER['HTTP_HOST'],'opration'=>$opration),
                                CURLOPT_HTTPHEADER => array(
                                                'Accept: application/json'
                                ),
                ));
                $response = curl_exec($curl);

                curl_close($curl);
                $apiresponse = json_decode($response, true);
                //echo '<pre>'; print_r($apiresponse); die();
                if ($apiresponse['status'] == true) {
                                return $apiresponse['status'];
                } else {
                                return $apiresponse['message'];
                }
}

/**
* check ftp space 
 */
function check_ftp_space($lisencekey)
{


                $curl = curl_init();
                curl_setopt_array($curl, array(
                                CURLOPT_URL => 'http://127.0.0.1:8000/api/get_ftpspace',
                                CURLOPT_RETURNTRANSFER => true,
                                CURLOPT_ENCODING => '',
                                CURLOPT_MAXREDIRS => 10,
                                CURLOPT_TIMEOUT => 0,
                                CURLOPT_FOLLOWLOCATION => true,
                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                CURLOPT_CUSTOMREQUEST => 'POST',
                                CURLOPT_POSTFIELDS => array('licence_key' => $lisencekey, 'domain_name' => $_SERVER['HTTP_HOST']),
                                CURLOPT_HTTPHEADER => array(
                                                'Accept: application/json'
                                ),
                ));
                $response = curl_exec($curl);

                curl_close($curl);
                $apiresponse = json_decode($response, true);

                if ($apiresponse['status'] == true) {
                                
                                return $apiresponse;
                } else {
                                return $apiresponse;
                }
}

/**
* get path
*/
function get_path()
{
                global $wpdb;
                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
                $lisencekey = $checklicensekey->option_value;
                
                $curl = curl_init();
                curl_setopt_array($curl, array(
                                CURLOPT_URL => 'http://127.0.0.1:8000/api/get_path',
                                CURLOPT_RETURNTRANSFER => true,
                                CURLOPT_ENCODING => '',
                                CURLOPT_MAXREDIRS => 10,
                                CURLOPT_TIMEOUT => 0,
                                CURLOPT_FOLLOWLOCATION => true,
                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                CURLOPT_CUSTOMREQUEST => 'POST',
                                CURLOPT_POSTFIELDS => array('licence_key' => $lisencekey, 'domain_name' => $_SERVER['HTTP_HOST']),
                                CURLOPT_HTTPHEADER => array(
                                                'Accept: application/json'
                                ),
                ));
                $response = curl_exec($curl);

                curl_close($curl);
                $apiresponse = json_decode($response, true);

                if ($apiresponse['status'] == true) {
                                
                                return $apiresponse;
                } else {
                                return $apiresponse;
                }
}
function send_notification()
{
                global $wpdb;
                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
                $lisencekey = $checklicensekey->option_value;
                
                $curl = curl_init();
                curl_setopt_array($curl, array(
                                CURLOPT_URL => 'http://127.0.0.1:8000/api/send_notification',
                                CURLOPT_RETURNTRANSFER => true,
                                CURLOPT_ENCODING => '',
                                CURLOPT_MAXREDIRS => 10,
                                CURLOPT_TIMEOUT => 0,
                                CURLOPT_FOLLOWLOCATION => true,
                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                CURLOPT_CUSTOMREQUEST => 'POST',
                                CURLOPT_POSTFIELDS => array('licence_key' => $lisencekey, 'domain_name' => $_SERVER['HTTP_HOST']),
                                CURLOPT_HTTPHEADER => array(
                                                'Accept: application/json'
                                ),
                ));
                $response = curl_exec($curl);

                curl_close($curl);
                $apiresponse = json_decode($response, true);

                if ($apiresponse['status'] == true) {
                                
                                return $apiresponse;
                } else {
                                return $apiresponse;
                }
}

/**
* View_export_list  open export UI for export functionlity .
*/
function View_export_list()
{ 
                global $wpdb;
                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
    
                if (!empty($checklicensekey)) {
                                $check_expire_key = check_license_key_exipire($checklicensekey->option_value,'Backup');
                                if ($check_expire_key === true) {
                                                $_SESSION['errormessage'] = '';
                                                require_once plugin_dir_path(__FILE__) . 'includes/view/export/index.php';
                                } else {

                                                $_SESSION['errormessage'] = $check_expire_key;

                                                require_once plugin_dir_path(__FILE__) . 'includes/view/secretkey/index.php';
                                }
                } else {
                                $_SESSION['errormessage'] = '';
                                secretkey();
                }
   
}

add_action('wp_ajax_exportstart', 'exportstart');
add_action('wp_ajax_nopriv_exportstart', 'exportstart');


function exportstart()
{
  try {
                                                schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'export-manual','start_datetime' => gmdate('Y-m-d H:i:s')));
                                
                } catch (Error $e) {

                echo 'Error function to exportstart: ',  $e->getMessage(), "\n";
                                wp_send_json_error($e->getMessage());
                }
}
/**
* view_import_list  open Import UI for Import functionlity .
*/
function view_import_list()
{
                
                
                global $wpdb;
                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");

                if (!empty($checklicensekey)) {
                                $check_expire_key = check_license_key_exipire($checklicensekey->option_value,'Import');
                                if ($check_expire_key === true) {
                                                $_SESSION['errormessage'] = '';
                                                require_once plugin_dir_path(__FILE__) . 'includes/view/import/index.php';
                                } else {

                                                $_SESSION['errormessage'] = $check_expire_key;
                                                //echo '<pre>'; echo $_SESSION['errormessage'];
                                                require_once plugin_dir_path(__FILE__) . 'includes/view/secretkey/index.php';
                                }
                } else {
                                $_SESSION['errormessage'] = '';
                                secretkey();
                }
}




add_action('wp_ajax_mediaexport', 'mediaexport');
add_action('wp_ajax_nopriv_mediaexport', 'mediaexport');
/**
* Start Export Functionlity
*  mediaexport  Export all media files .
                
 */
function mediaexport()
{
                set_time_limit(0);
                require_once plugin_dir_path(__FILE__) . 'includes/view/export/createmediazip.php';
}


add_action('wp_ajax_pluginexport', 'pluginexport');
add_action('wp_ajax_nopriv_pluginexport', 'pluginexport');

/**
*  pluginexport  Export all plugins files .
                
 */
function pluginexport()
{
    set_time_limit(0);
                require_once plugin_dir_path(__FILE__) . 'includes/view/export/createpluginzip.php';
}


add_action('wp_ajax_themeexport', 'themeexport');
add_action('wp_ajax_nopriv_themeexport', 'themeexport');
/**
*  themeexport  Export all themes files .
                
 */
function themeexport()
{
                set_time_limit(0);
                require_once plugin_dir_path(__FILE__) . 'includes/view/export/createthemezip.php';
}



add_action('wp_ajax_cacheexport', 'cacheexport');
add_action('wp_ajax_nopriv_cacheexport', 'cacheexport');
/**
*  cacheexport  Export all cache files .
                
 */
function cacheexport()
{
                set_time_limit(0);
                require_once plugin_dir_path(__FILE__) . 'includes/view/export/createcachezip.php';
}


add_action('wp_ajax_databaseexport', 'databaseexport');
add_action('wp_ajax_nopriv_databaseexport', 'databaseexport');
/**
*  databaseexport  Export all databases files .
                
 */
function databaseexport()
{
                global $wpdb;
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/export/database.php';
}



add_action('wp_ajax_finalzip', 'finalzip');
add_action('wp_ajax_nopriv_finalzip', 'finalzip');
/**
*  finalzip  Create export zip file .
                
 */
function finalzip()
{
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/export/finalzip.php';
}

/**
*  End Export Functionlity  .
                
 */

add_action('wp_ajax_import', 'import');
add_action('wp_ajax_nopriv_import', 'import');
/**
* Start Import  Functionlity
*  import       Upload export zip file .
                
 */

function import()
{
                try {
                                
                                $emaildomail = 0;
                                $allowedExts = array("zip");
                                $extension = $_POST["ext"];
                
                                if (isset($_POST['no_email_domial'])) {
                                                $emaildomail = sanitize_text_field($_POST['no_email_domial']);
                                }
                                /**
                                * check BsoftTechnology_SCMS_Import folder exist in wp-content foler if folder not exist create foler and give permission.
                                */
                                if (!file_exists(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import')) {
                                                mkdir(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777, true);
                                } else {
                                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777);
                                }

                                if (in_array($extension, $allowedExts)) {
                                                
                                                if ($_FILES["importfile"]["error"] > 0) {
                                                                wp_send_json_error("Return Code: " . $_FILES["importfile"]["error"] . "<br>");
                                                } else {
                                                                /**
                                                                * check upload file exist in folder if exist unlink file and upload agian in folder.
                                                                */
                                                                
                                                                if (file_exists(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_import/' . $_FILES["importfile"]["name"])) {
                                                                                unlink(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_import/' . $_FILES["importfile"]["name"]);
                                                                }
                                                                $chunkNumber = $_POST['chunk'];
                                                                if (move_uploaded_file($_FILES["file"]["tmp_name"], WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import/' . $_POST["filename"]. '.part_' . $chunkNumber)) {
                                                                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import/' . $_POST["filename"]. '.part_' . $chunkNumber,0777);
                                                                                schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'import-manual', 'servertype' => 'local','start_datetime' => gmdate('Y-m-d H:i:s')));

                                                                                wp_send_json_success(array('file' => $_FILES["importfile"]["name"], 'emaildomail' => $emaildomail));
                                                                } else {
                                                                                wp_send_json_error(" Something Went Wrong Please check file Permission");
                                                                }
                                     }

                                                
                                                                
                                } else {
                                
                                                wp_send_json_error(" Invalid Format");
                                }
                } catch (Error $e) {

                                echo 'Error function to import: ',  $e->getMessage(), "\n";
                                wp_send_json_error($e->getMessage());
                }
}

add_action('wp_ajax_ImporBackup', 'ImporBackup');
add_action('wp_ajax_nopriv_ImporBackup', 'ImporBackup');
/**
    
 *  ImporBackup   check import zip file and unzip zip file for import the data .
                
 */
function ImporBackup()
{
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/import/import.php';
}

add_action('wp_ajax_mediaimport', 'mediaimport');
add_action('wp_ajax_nopriv_mediaimport', 'mediaimport');
/**
    
 *  mediaimport   media import file import all media files in uploads folder .
                
 */
function mediaimport()
{
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/import/unzipmedia.php';
}

add_action('wp_ajax_themeimport', 'themeimport');
add_action('wp_ajax_nopriv_themeimport', 'themeimport');
/**
    
 *  themeimport   Import Themes  file  Themes folder .
                
 */
function themeimport()
{
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/import/unziptheme.php';
}

add_action('wp_ajax_cacheimport', 'cacheimport');
add_action('wp_ajax_nopriv_cacheimport', 'cacheimport');
/**
    
 *  cacheimport   Import Cache  file  Cache folder .
                
 */
function cacheimport()
{
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/import/unzipcache.php';
}

add_action('wp_ajax_databaseimport', 'databaseimport');
add_action('wp_ajax_nopriv_databaseimport', 'databaseimport');
/**
    
 *  databaseimport   Import database  tables In  Database.
                
 */
function databaseimport()
{
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/import/importdatabase.php';
}

add_action('wp_ajax_importplugin', 'importplugin');
add_action('wp_ajax_nopriv_importplugin', 'importplugin');
/**
    
 *  importplugin   Import Plugins  files In  plugins folder.
* End import functionlity
                
 */
function importplugin()
{
                set_time_limit(0);
                
                require_once plugin_dir_path(__FILE__) . 'includes/view/import/unzipplugin.php';
}

add_action('wp_ajax_saveftpcredential', 'saveftpcredential');
add_action('wp_ajax_nopriv_saveftpcredential', 'saveftpcredential');
/**
    
 *  saveftpcredential   save credential of ftp and sftp server.
                
 */
function saveftpcredential()
{
                try {
                                set_time_limit(0);
                
                                global $wpdb;
                                $hostname = '';
                                $ftpusername = '';
                                $ftppassword = '';
                                $ftpport = '';
                                $ftppath = '';
                                $id = '';
                                $servertype = '';
                                $serverinfo = '';
                                if (isset($_POST['id'])) {
                                                $id = sanitize_text_field($_POST['id']);
                                }
                                if (isset($_POST['serverinfo'])) {
                                                $serverinfo = sanitize_text_field($_POST['serverinfo']);
                                }
                                if (isset($_POST['servertype'])) {
                                                $servertype = sanitize_text_field($_POST['servertype']);
                                }
                                if (isset($_POST['recipient_name'])) {
                                                $hostname = sanitize_text_field($_POST['recipient_name']);
                                }
                                if (isset($_POST['ftpuser_name'])) {
                                                $ftpusername = sanitize_text_field($_POST['ftpuser_name']);
                                }
                                if (isset($_POST['ftppassword'])) {
                                                $ftppassword = sanitize_text_field($_POST['ftppassword']);
                                }
                                if (isset($_POST['ftpport'])) {
                                                $ftpport = sanitize_text_field($_POST['ftpport']);
                                }
                                if (isset($_POST['ftppath'])) {
                                                
                                                                $ftppath = sanitize_text_field($_POST['ftppath']);
                                }
                                if($serverinfo != "personal")
                                {
                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                $getftpdata = $apiresponse['message'];
                                                $hostname =   base64_decode($getftpdata['hostname']);
                                                $ftpusername = base64_decode($getftpdata['username']);
                                                $ftppassword = base64_decode($getftpdata['password']);
                                                $ftpport = base64_decode($getftpdata['port']);
                                                $userinfo = get_path();
                                                $rootpath = '';
                                                if (substr(trim(base64_decode($getftpdata['ftppath'])),  -1) != '/')
                                                {
                                                
                                                   $rootpath =  base64_decode($getftpdata['ftppath']).'/';
                                                }
                                                else
                                                {
                                                   $rootpath =  base64_decode($getftpdata['ftppath']);   
                                                }
                                                $ftppath = $rootpath.$userinfo['message'].'/'. $_SERVER['HTTP_HOST'];
                                }
      
                                /**
    
                                 *  vendor/autoload.php   include sftp library.
                
                                 */
                                $get_credential = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype FROM " . $wpdb->prefix . "bsoft_server_credential");

                                if ($servertype == "sftp") {
                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';

                                                $obj = new Hug\Sftp\Sftp;
                                                $checkconnectionsftp = $obj::test($hostname, $ftpusername, $ftppassword, $ftpport);
          
                                                if ($checkconnectionsftp === true) {
                                                                if (empty($get_credential)) {
                                                                                if($serverinfo != "personal"){
                                                                                                $wpdb->insert($wpdb->prefix . 'bsoft_server_credential', array('hostname' => 'B-soft', 'username' =>'B-soft', 'password' => 'B-soft', 'port' => 'B-soft', 'ftppath' =>'B-soft', 'servertype' => $servertype,'serverinfo'=>$serverinfo));
                                                                                }
                                                                                else{
                        $wpdb->insert($wpdb->prefix . 'bsoft_server_credential', array('hostname' => $hostname, 'username' => $ftpusername, 'password' => $ftppassword, 'port' => $ftpport, 'ftppath' => $ftppath, 'servertype' => $servertype,'serverinfo'=>$serverinfo));
                                                                                }
                                                                                
                                                                } else {
                                                                                if($serverinfo != "personal"){
                                                                                                $result = $wpdb->update($wpdb->prefix . 'bsoft_server_credential', array('hostname' => 'B-soft', 'username' => 'B-soft', 'password' => 'B-soft', 'port' => 'B-soft', 'ftppath' => 'B-soft', 'servertype' => $servertype,'serverinfo'=>$serverinfo), array('id' => $get_credential->id));
                                                                                }
                                                                                else{
                                                                                                $result = $wpdb->update($wpdb->prefix . 'bsoft_server_credential', array('hostname' => $hostname, 'username' => $ftpusername, 'password' => $ftppassword, 'port' => $ftpport, 'ftppath' => $ftppath, 'servertype' => $servertype,'serverinfo'=>$serverinfo), array('id' => $get_credential->id));
                                                                                }
                                                                                
                                                                }
                                                                $checkdirectory = $obj::is_dir($hostname, $ftpusername, $ftppassword, $ftppath, $ftpport);
                                                                if ($checkdirectory === false) {
                                                                                $directory_ftp = array_filter(explode('/', $ftppath));

                                                                                if (is_array($directory_ftp) && count($directory_ftp) > 0) {
                                                                                                foreach ($directory_ftp as $ftpkey => $ftpdirectory) {

                                                                                                                $directory  .= '/' . $ftpdirectory;

                                                                                                if ($obj::is_dir($hostname, $ftpusername, $ftppassword, $directory, $ftpport) === false) {

                                                                                                                                $obj::mkdir($hostname, $ftpusername, $ftppassword, $directory, $ftpport, 0777);
                                                                                                }
                                                                                                }
                                                                                }
                                                                }

                                                                wp_send_json_success('success');
                                                } else {
                                                                wp_send_json_error("Wrong Credential");
                                                }
                                } elseif ($servertype == "ftp") {
            error_reporting(1);
                                                $ftp_conn = ftp_connect($hostname ,$ftpport);
          
                                                // login
                                                if (ftp_login($ftp_conn, $ftpusername, $ftppassword)) {

                                                                if (empty($get_credential)) {
                                                                                if($serverinfo != "personal"){
                                                                                                $wpdb->insert($wpdb->prefix . 'bsoft_server_credential', array('hostname' => 'B-soft', 'username' =>'B-soft', 'password' => 'B-soft', 'port' => 'B-soft', 'ftppath' =>'B-soft', 'servertype' => $servertype,'serverinfo'=>$serverinfo));
                                                                                }
                                                                                else{
                        $wpdb->insert($wpdb->prefix . 'bsoft_server_credential', array('hostname' => $hostname, 'username' => $ftpusername, 'password' => $ftppassword, 'port' => $ftpport, 'ftppath' => $ftppath, 'servertype' => $servertype,'serverinfo'=>$serverinfo));
                                                                                }
                                                                } else {
                                                                                if($serverinfo != "personal"){
                                                                                                $result = $wpdb->update($wpdb->prefix . 'bsoft_server_credential', array('hostname' => 'B-soft', 'username' => 'B-soft', 'password' => 'B-soft', 'port' => 'B-soft', 'ftppath' => 'B-soft', 'servertype' => $servertype,'serverinfo'=>$serverinfo), array('id' => $get_credential->id));
                                                                                }
                                                                                else{
                                                                                                $result = $wpdb->update($wpdb->prefix . 'bsoft_server_credential', array('hostname' => $hostname, 'username' => $ftpusername, 'password' => $ftppassword, 'port' => $ftpport, 'ftppath' => $ftppath, 'servertype' => $servertype,'serverinfo'=>$serverinfo), array('id' => $get_credential->id));
                                                                                }
                                                                }
                                                                $check_dir_exist_ftp =  is_dir('ftp://' . $ftpusername . ':' . $ftppassword . '@' . $hostname . '/' . $ftppath);
                                                                if ($check_dir_exist_ftp == false) {

                                                                                $directory_ftp = array_filter(explode('/', $ftppath));

                                                                                if (is_array($directory_ftp) && count($directory_ftp) > 0) {
                                                                                                foreach ($directory_ftp as $ftpkey => $ftpdirectory) {

                                                                                                                $directory  .= '/' . $ftpdirectory;

                                                                                                                if (is_dir('ftp://' . $ftpusername . ':' . $ftppassword . '@' . $hostname . '/' . $directory) == false) {

                                                                                                                                ftp_mkdir($ftp_conn, $directory);
                                                                                                                }
                                                                                                }
                                                                                }
                                                                }

                                                                wp_send_json_success('success');
                                                } else {
                                                                wp_send_json_error("Wrong Credential");
                                                }

                                                ftp_close($ftp_conn);
                                }
                } catch (Error $e) {
                                echo 'Error saveftpcredential function: ',  $e->getMessage(), "\n";
                }
}

add_action('wp_ajax_uploadFtp', 'uploadFtp');
add_action('wp_ajax_nopriv_uploadFtp', 'uploadFtp');

/**
    
 *  uploadFtp   export zip file in ftp and sftp location
*/
function uploadFtp()
{
                try {
                                set_time_limit(0);
                
                                global $wpdb;
                                $exportfilepaths = '';
                                $exportfilename = '';
                                if (isset($_POST['file'])) {
                                                $exportfilename = sanitize_text_field($_POST['file']);
                                }
                                if (isset($_POST['export_file_path'])) {
                                                $exportfilepaths = sanitize_text_field($_POST['export_file_path']);
                                }
                                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
                                
                                $getftpdata = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype,serverinfo FROM " . $wpdb->prefix . "bsoft_server_credential");
                                $ftpspace = check_ftp_space($checklicensekey->option_value);
                                
                                if (!empty($getftpdata) ) {
           
                                                $hostname = $getftpdata->hostname;
                                                $ftpusername = $getftpdata->username;
                                                $ftppassword = $getftpdata->password;
                                                $ftpport = $getftpdata->port;
                
                                                $servertype = $getftpdata->servertype;
                                                $serverinfo = $getftpdata->serverinfo;
                                                
                                                if (substr($getftpdata->ftppath, -1) === '/') {
                                                                $ftppath = $getftpdata->ftppath . $exportfilename;
                                                } else {
                                                                $ftppath = $getftpdata->ftppath . '/' . $exportfilename;
                                                }
                                                if ($servertype == "sftp") {
                                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                                $obj = new Hug\Sftp\Sftp;
                                                                if($serverinfo == 'B-soft')
                                                                {
                                                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                        $getftpdata = $apiresponse['message'];
                                                                                $ftpusername = base64_decode($getftpdata['username']); 
                                                                                $hostname = base64_decode($getftpdata['hostname']);
                                                                                $ftppassword = base64_decode($getftpdata['password']);
                                                                                $ftpport = base64_decode($getftpdata['port']);
                                                                                $userinfo = get_path();
                                                                                $rootpath = '';
                                                                                if (substr(trim(base64_decode($getftpdata['ftppath'])), -1) === '/') {
                                                                                                $rootpath = base64_decode($getftpdata['ftppath']);
                                                                                } else {
                                                                                                $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                                                                }
                                                                                $ftppath = $rootpath.$userinfo['message'];
                                                                                $ftpscanfile = $obj::scandirsize($hostname, $ftpusername, $ftppassword, $ftppath, $ftpport);
                                                                                $ftpbackuplist = [];
                                                                                foreach ($ftpscanfile as $key => $value) {
                                                                                                if ($value['filename'] != "." && $value['filename'] != '..') {
                                                                                                                $backupfiles = $obj::scandirsize($hostname, $ftpusername, $ftppassword, $ftppath.'/'.$value['filename'], $ftpport);
                                                                                                                foreach ($backupfiles as $key => $backupsize) {
                                                                                                                                if ($backupsize['filename'] != "." && $backupsize['filename'] != '..') {
                                                                                                                                                $ftpbackuplist[] = $backupsize['size'];
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                }
                                                                
                    $filesize = filesize($exportfilepaths);
                                                                                $ftpfilesize = totalsize(array_sum($ftpbackuplist)+$filesize);
                                                                   
                                                                                if($ftpspace['message'] < $ftpfilesize)
                                                                                {
                                                                                                
                                                                                                send_notification();
                                                                                                wp_send_json_error("Ftp Space Is Full");
                                                                                
                                                                                }
                                                                                
                                                                                $ftppath =$rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/'.$exportfilename;
                                                    }
                                        
                                                                $upload =  $obj::upload($hostname, $ftpusername, $ftppassword, $exportfilepaths, $ftppath,  $ftpport);
                                        
                                                } elseif ($servertype == "ftp") {
                                                                $ftp_conn = ftp_connect($hostname) or die("Could not connect to $hostname");
                                                                $checkftplogin = ftp_login($ftp_conn, $ftpusername, $ftppassword);
                                                                if ($checkftplogin) {
                                                                                if($serverinfo == 'B-soft')
                                                                                {
                                                                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                                                                $getftpdata = $apiresponse['message']; 
                                                                                                $hostname =   base64_decode($getftpdata['hostname']);
                                                                                                $ftpusername = base64_decode($getftpdata['username']); 
                                                                                                $ftppassword = base64_decode($getftpdata['password']);
                                                                                                $ftpport = base64_decode($getftpdata['port']);
                                                                                                $userinfo = get_path();
                                                                                                $rootpath = '';
                                                                                                if (substr(base64_decode($getftpdata['ftppath']), -1) === '/') {
                                                                                                                $rootpath = base64_decode($getftpdata['ftppath']);
                                                                                                } else {
                                                                                                                $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                                                                                }
                                                                                                $ftppath = $rootpath.$userinfo['message'];
                                                                                                $contents = ftp_rawlist($ftp_conn, $ftppath);
                                                                                                
                                                                                                $ftpbackuplist = array();
                                                                                                foreach ($contents as $line) {
                                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                                preg_split('/\s+/', $line, 9);
                                
                                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                                $ftpbackuplist[] =  $size;
                                                                                                }
                                                                                                $filesize = filesize($exportfilepaths);
                                                                                                $ftpfilesize = totalsize(array_sum($ftpbackuplist)+$filesize);
                                                                                   
                                                                                                if($ftpspace['message'] < $ftpfilesize)
                                                                                                {
                                                                                                                send_notification();
                                                                                                                wp_send_json_error("Ftp Space Is Full");
                                                                                                }
                                                                                                $ftppath =$rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/'.$exportfilename;
                                                                                
                                                                                }
                                                                                
                                                                                $ret = ftp_nb_put($ftp_conn, $ftppath, $exportfilepaths, FTP_BINARY, FTP_AUTORESUME);
                                                                                while (FTP_MOREDATA == $ret) {
                                                                                                
                                                                                                $ret = ftp_nb_continue($ftp_conn);
                                                                                }
                                                                                ftp_close($ftp_conn);
                                                                } else {
                                                                                ftp_close($ftp_conn);
                                                                                wp_send_json_error("Ftp Detail not exist");
                                                                }
                                                } else {
                                                                wp_send_json_error("Ftp Detail not exist");
                                                }

                                                wp_send_json_success("Export successfully");
                                } else {
                                                
                                                wp_send_json_error("Ftp Detail not exist");
                                }
                } catch (Error $e) {
                                echo 'Error uploadFtp function: ',  $e->getMessage(), "\n";
                }
}


add_action('wp_ajax_getFTPCredential', 'getFTPCredential');
add_action('wp_ajax_nopriv_getFTPCredential', 'getFTPCredential');
/**
    
 *  getFTPCredential   Get ftp and sftp server details 
 */
function getFTPCredential()
{
                try 
                {
                                
                                set_time_limit(0);
                    global $wpdb;
                                $servertype = '';
                                if (isset($_POST['servertype'])) {
                                                $servertype = sanitize_text_field($_POST['servertype']);
                                }
                                if (isset($_POST['serverinfo'])) {
                                                $serverinfo = sanitize_text_field($_POST['serverinfo']);
                                }
                                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
                                if (!empty($checklicensekey)) {
                                                $check_expire_key = true;
                                   if($serverinfo == "B-soft")
                                   {
             $check_expire_key = check_license_key_exipire($checklicensekey->option_value,'Ftp Space');
                                     $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                $getftpdata = $apiresponse['message']; 
                                                
                                   }
                                   else
                                   {
                                                $getftpdata = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype FROM " . $wpdb->prefix . "bsoft_server_credential WHERE servertype = '" . $servertype . "' AND serverinfo = '".$serverinfo."'");

                                   }
                                                
                                                if ($check_expire_key === true) 
                                                {
                                                                
                                                    
                                                                if (!empty($getftpdata)) {
                                                                                wp_send_json_success($getftpdata);
                                                                } else {
                                                                                wp_send_json_success(array());
                                                                }
                                                } 
                                                else 
                                                {
                
                                                                $_SESSION['errormessage'] = $check_expire_key;
                                                                wp_send_json_error(array('msg'=>$check_expire_key));
                
                                                                
                                                }
                                
                   }
                } catch (Error $e) {
                                echo 'Error getFTPCredential function: ',  $e->getMessage(), "\n";
                }
}

add_action('wp_ajax_saveftpcredentialimport', 'saveftpcredentialimport');
add_action('wp_ajax_nopriv_saveftpcredentialimport', 'saveftpcredentialimport');
/**
    
 *  saveftpcredentialimport    upload ftp and sftp server zip file in plugin folder for import 
 */
function saveftpcredentialimport()
{
                try {
                                set_time_limit(0);
                
                                global $wpdb;
                                $emaildomail = 0;
                                $servertype = '';
                                $id  = '';
                                $ftppath  = '';
                                $ftpport = '';
                                $ftppassword = '';
                                $ftpusername = '';
                                $hostname = '';
                                $filename = '';
                                $serverinfo = '';
                                
                                if (!file_exists(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import')) {
                                                mkdir(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777, true);
                                } else {
                                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777);
                                }
                                if (isset($_POST['id'])) {
                                                $id = sanitize_text_field($_POST['id']);
                                }
                                if (isset($_POST['servertype'])) {
                                                $servertype = sanitize_text_field($_POST['servertype']);
                                }
                                if (isset($_POST['serverinfo'])) {
                                                $serverinfo = sanitize_text_field($_POST['serverinfo']);
                                }
                                if (isset($_POST['no_email_domial'])) {
                                                $emaildomail = sanitize_text_field($_POST['no_email_domial']);
                                }
                                if (isset($_POST['recipient_name'])) {
                                                $hostname = sanitize_text_field($_POST['recipient_name']);
                                }
                                if (isset($_POST['ftpuser_name'])) {
                                                $ftpusername = sanitize_text_field($_POST['ftpuser_name']);
                                }
                                if (isset($_POST['ftppassword'])) {
                                                $ftppassword = sanitize_text_field($_POST['ftppassword']);
                                }
                                if (isset($_POST['ftpport'])) {
                                                $ftpport = sanitize_text_field($_POST['ftpport']);
                                }
                                if (isset($_POST['ftppath'])) {
                                                
                                                                $ftppath = sanitize_text_field($_POST['ftppath']).'/'.sanitize_text_field($_POST['filename']);
                                
                                }
                                if($serverinfo != "personal")
                                {
                                                
                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                $getftpdata = $apiresponse['message'];
                                                $hostname =   base64_decode($getftpdata['hostname']);
                                                $ftpusername = base64_decode($getftpdata['username']);
                                                $ftppassword = base64_decode($getftpdata['password']);
                                                $ftpport = base64_decode($getftpdata['port']);
                                                $userinfo = get_path();
                                                $rootpath = '';
                                                if (substr(trim(base64_decode($getftpdata['ftppath'])),  -1) != '/')
                                                {
                                                
                                                   $rootpath =  base64_decode($getftpdata['ftppath']).'/';
                                                }
                                                else
                                                {
                                                   $rootpath =  base64_decode($getftpdata['ftppath']);   
                                                }

                                                $ftppath = $rootpath.$userinfo['message'].'/'. $_SERVER['HTTP_HOST'].'/'.sanitize_text_field($_POST['filename']);
                                }
                                
                                /**
    
                                 *  vendor/autoload.php   include sftp library.
                
                                 */
                                
                
                                if ($servertype  === "sftp") {
                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                $obj = new Hug\Sftp\Sftp;
                                                $checkconnectionsftp = $obj::test($hostname, $ftpusername, $ftppassword, $ftpport);

                                                if ($checkconnectionsftp === true) {
                                                                if ($obj::is_file($hostname, $ftpusername, $ftppassword, $ftppath, $ftpport) == true) {
                                                                                $remote_file =  $ftppath;
                                                                                $exportfilename = end(array_filter(explode('/', $ftppath)));
                                                                                $local_file = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_import/" . end(array_filter(explode('/', $ftppath)));
                                                                                $obj::download($hostname, $ftpusername, $ftppassword, $remote_file, $local_file, $ftpport);
                                                                                schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'import-manual', 'servertype' => 'ftp','start_datetime' => gmdate('Y-m-d H:i:s')));
                                                                                wp_send_json_success(array('file' => $exportfilename, 'emaildomail' => $emaildomail));
                                                                } else {
                                                                                wp_send_json_error("Back up Not exist Please check correct Path");
                                                                }
                                                } else {
                                                                wp_send_json_error("Wrong Credential");
                                                }
                                } elseif ($servertype  === "ftp") {
                                                error_reporting(1);
                                                $ftp_conn = ftp_connect($hostname ,$ftpport);
                                                
                                                $checkftplogin = ftp_login($ftp_conn, $ftpusername, $ftppassword);
                                                if ($checkftplogin) {
                                                                $listing = ftp_nlist($ftp_conn, $ftppath);
                                                                if (!empty($listing)) {
                                                                                $server_file =  $ftppath;
                                                                                $exportfilename = end(array_filter(explode('/', $ftppath)));
                                                                                $local_file = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_import/" . end(array_filter(explode('/', $ftppath)));

                                                                                if (ftp_get($ftp_conn, $local_file, $server_file, FTP_BINARY)) {
                                                                                                ftp_close($ftp_conn);
                                                                                                schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'import-manual', 'servertype' => 'ftp','start_datetime' => gmdate('Y-m-d H:i:s')));
                                                                                                wp_send_json_success(array('file' => $exportfilename, 'emaildomail' => $emaildomail));
                                                                                } else {
                                                                                                ftp_close($ftp_conn);
                                                                                                wp_send_json_error("Something Went Wrong");
                                                                                }
                                                                } else {
                                                                                wp_send_json_error("Back up Not exist Please check correct Path");
                                                                }
                                                }
                                                else {
                                                                wp_send_json_error("Wrong Credential");
                                                }
                                }
                } catch (Error $e) {
                                echo 'Error saveftpcredentialimport function: ',  $e->getMessage(), "\n";
                }
}


/**
* start schduler functionlity  
 * schdule_option  set cron schdule 
                 
 */
function schdule_option()
{
                try{
                                set_time_limit(0);
                
                                global $wpdb;
                                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
                                if (!empty($checklicensekey)) {
                                                $check_expire_key = check_license_key_exipire($checklicensekey->option_value,'Schedule Backup');
                                                if ($check_expire_key === true) {
                                                                $_SESSION['errormessage'] = '';
                                                                $data = $wpdb->get_row('select `id`,`timestamp`,`hook`,`schedule`,`args`,`schdule_interval`,`schdule_type`,`display_time`,`cron_data`,`next_interval`,`schdule_ftp_server`,`localserver`,`backupno`,`allbackup` FROM ' . $wpdb->prefix . 'crontime ORDER BY id DESC LIMIT 1');
                                                                $servercredential = $wpdb->get_row('select `servertype`,`id`,`hostname`,`username`,`password`,`ftppath`,`servertype`,`serverinfo` FROM ' . $wpdb->prefix . 'bsoft_server_credential ORDER BY id DESC LIMIT 1');
                
                                                                require_once plugin_dir_path(__FILE__) . 'includes/view/schdule/index.php';
                                                } else {
                
                                                                $_SESSION['errormessage'] = $check_expire_key;
                
                                                                require_once plugin_dir_path(__FILE__) . 'includes/view/secretkey/index.php';
                                                }
                                } else {
                                                $_SESSION['errormessage'] = '';
                                                secretkey();
                                }
                }
                catch (Error $e) {
                                echo 'Error schdule_option function: ',  $e->getMessage(), "\n";
                }
}
add_action('wp_ajax_delete_cron', 'delete_cron');
add_action('wp_ajax_nopriv_delete_cron', 'delete_cron');
/**
* delete_cron  delete cron schdule 
                 
 */
function delete_cron()
{
                try {
                                set_time_limit(0);
                                global $wpdb;
                                $id = '';
                                if (isset($_POST['id'])) {
                                                $id = sanitize_text_field($_POST['id']);
                                }

                                $wpdb->delete($wpdb->prefix . 'crontime', array('id' => $id), array('%d'));
                                wp_unschedule_hook('my_task_hook');
                                wp_send_json_success(array('status' => 'success'));
                } catch (Error $e) {
                                echo 'Error delete_cron function: ',  $e->getMessage(), "\n";
                }
}
/**
     
 *  myaddweekly    function set interval for next schdule
*/
function myaddweekly($schedules)
{
                try {
                                set_time_limit(0);
                                global $wpdb;
                                $data = $wpdb->get_row('select  id,timestamp,hook,schedule,args,schdule_interval FROM ' . $wpdb->prefix . 'crontime ORDER BY id DESC LIMIT 1');
                                if (!empty($data)) {
                                                $schedules[$data->schedule] = array(
                                                                'interval' => $data->schdule_interval,
                                                                'display' => __($data->args)
                                                );

                                                if (!empty($schedules)) {
                                                                return $schedules;
                                                }
                                } else {
                                                return $schedules;
                                }
                } catch (Error $e) {
                                echo 'Error myaddweekly function: ',  $e->getMessage(), "\n";
                }
}
/**
* cron_schedules  schdule cron  
                 
 */
add_filter('cron_schedules', 'myaddweekly');


add_action('wp_ajax_schdule', 'schdule');
add_action('wp_ajax_nopriv_schdule', 'schdule');
/**
* schdule  function schdule the cron for export the website backup  Daily , hourly , weekly , monthly 
                 
 */
function schdule()
{
                try {
                                global $wpdb;
                                $display_time = '';
                                $schduletype = '';
                                $schdule_name = '';
                                $localserver = 0;
                                $schdule_ftp_server = 0;
                                $backupno = null;
                                $type = '';
                                if (isset($_POST['schduletype'])) {
                                                $schduletype = sanitize_text_field($_POST['schduletype']);
                                }
                                if (isset($_POST['schdule_name'])) {
                                                $schdule_name = sanitize_text_field($_POST['schdule_name']);
                                }
                                if (isset($_POST['localserver'])) {
                                                $localserver = sanitize_text_field($_POST['localserver']);
                                }
                                if (isset($_POST['schdule_ftp_server'])) {
                                                $schdule_ftp_server = sanitize_text_field($_POST['schdule_ftp_server']);
                                }
                                if (isset($_POST['backupno'])) {
                                                $backupno = sanitize_text_field($_POST['backupno']);
                                }
                                if (isset($_POST['allbackup'])) {
                                                $allbackup = sanitize_text_field($_POST['allbackup']);
                                }
                                if ($schdule_ftp_server == 1) {
                                                $servercredential = $wpdb->get_row('select `id`,`hostname`,`username`,`password`,`port`,`ftppath`,`servertype`,`serverinfo` FROM ' . $wpdb->prefix . 'bsoft_server_credential ORDER BY id DESC LIMIT 1');

                                                if (empty($servercredential)) {
                                                                wp_send_json_error(array('status' => 'error', 'message' => "Please Save Ftp Credential"));
                                                }
                                }

                                $cron_data = json_encode($_POST);
                                if ($schduletype === "hour") {

                                                $hour = sanitize_text_field($_POST['hour']) * 60 * 60;
                                                $hour_minutes = sanitize_text_field($_POST['hour_minutes']) * 60;
                                                $timeinterval = $hour + $hour_minutes;
                                                $next_interval = $timeinterval;
                                                $date = date('y-m-d H:i:s');
                                                $date = strtotime($date);
                                                $timestamp = strtotime("+" . $timeinterval . " sec", $date);
                                                $display_time = 'Every ' . sanitize_text_field($_POST['hour']) . ' Hour :' . sanitize_text_field($_POST['hour_minutes']) . ' Minutes';
                                } else if ($schduletype === "daily") {


                                                $timeinterval = 86400;
                                                $next_interval = 86400;
                                                $slecteddatetime = strtotime(date('y-m-d') . ' ' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00');
                                                $currentdatetime = strtotime(date('y-m-d h:i:s'));
                                                if ($slecteddatetime > $currentdatetime) {
                                                                $timestamp = $slecteddatetime;
                                                } else {
                                                                $timestamp = strtotime(date('y-m-d') . ' ' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00' . ' +1 day');
                                                }

                                                $display_time = 'Every Day ' . sanitize_text_field($_POST['hour']) . ' :' . sanitize_text_field($_POST['hour_minutes']) . ' ';
                                } else if ($schduletype === "weekly") {
                                                $weekarray = array(
                                                                0 => 'sunday',
                                                                1 => 'monday',
                                                                2 => 'tuesday',
                                                                3 => 'wednesday',
                                                                4 => 'thursday',
                                                                5 => 'friday',
                                                                6 => 'saturday'
                                                );
                                                $timeinterval = 604800;
                                                $next_interval = 604800;

                                                $slecteddatetime = strtotime(date("Y-m-d  H:i:s", strtotime($weekarray[sanitize_text_field($_POST['weekly'])] . '' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00')));
                                                $currentdatetime = strtotime(date('y-m-d h:i:s'));
                                                if ($slecteddatetime > $currentdatetime) {
                                                                $timestamp = $slecteddatetime;
                                                } else {
                                                                $timestamp = strtotime(date("Y-m-d  H:i:s", strtotime($weekarray[sanitize_text_field($_POST['weekly'])] . '' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00')));
                                                }
                                                $display_time = 'Every ' . $weekarray[sanitize_text_field($_POST['weekly'])] . ' ' . sanitize_text_field($_POST['hour']) . ' :' . sanitize_text_field($_POST['hour_minutes']) . ' ';
                                } else if ($schduletype === "month") {

                                                $timeinterval = 86400;
                                                $next_interval = 86400;
                                                $currentyear = date('Y');
                                                $currentmonth = date('m');
                                                $selectmonth = $_POST['month'];
                                                $slecteddatetime = strtotime(date("Y-m-d  H:i:s", strtotime($currentyear . '-' . $currentmonth . '-' . $selectmonth . ' ' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00')));
                                                $currentdatetime = strtotime(date('y-m-d h:i:s'));

                                                if ($slecteddatetime > $currentdatetime) {

                                                                $timestamp = $slecteddatetime;
                                                                $nextmonth = strtotime(date("Y-m-d  H:i:s", strtotime('+1 month ' . $currentyear . '-' . $currentmonth . '-' . $selectmonth . ' ' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00')));

                                                                $dateDiff = dateDiffInDays($slecteddatetime, $nextmonth);
                                                                $timeinterval = $dateDiff * 86400;
                                                                $next_interval = $dateDiff * 86400;
                                                } else {

                                                                $timestamp   = strtotime(date("Y-m-d  H:i:s", strtotime('+1 month ' . $currentyear . '-' . $currentmonth . '-' . $selectmonth . ' ' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00')));
                                                                $nextmonth   = strtotime(date("Y-m-d  H:i:s", strtotime('+2 month ' . $currentyear . '-' . $currentmonth . '-' . $selectmonth . ' ' . sanitize_text_field($_POST['hour']) . ':' . sanitize_text_field($_POST['hour_minutes']) . ':00')));

                                                                $dateDiff = dateDiffInDays($timestamp, $nextmonth);

                                                                $timeinterval = $dateDiff * 86400;
                                                                $next_interval = $dateDiff * 86400;
                                                }
                                                $display_time = 'Every Month Date -' . $selectmonth . ' Time -' . sanitize_text_field($_POST['hour']) . ' :' . sanitize_text_field($_POST['hour_minutes']) . ' ';
                                }


                                $data = $wpdb->get_row('select id FROM ' . $wpdb->prefix . 'crontime ORDER BY id DESC LIMIT 1');
                                $insert_arrary = array(
                                                'timestamp' => $timestamp, 'hook' => 'my_task_hook', 'schedule' => 'bsoft_sschdule', 'args' => $schdule_name,
                                                'schdule_interval' => $timeinterval, 'schdule_type' => $schduletype, 'next_interval' => $next_interval, 'display_time' => $display_time, 'cron_data' => $cron_data, 'schdule_ftp_server' => $schdule_ftp_server, 'localserver' => $localserver, 'backupno' => $backupno, 'allbackup' => $allbackup
                                );

                                if (!empty($data)) {
                                                $type = 'update';
                                                $wpdb->update($wpdb->prefix . 'crontime', $insert_arrary, array('id' => $data->id));
                                } else {
                                                $type = 'insert';
                                                $wpdb->insert($wpdb->prefix . 'crontime', $insert_arrary);
                                }
                                if ($allbackup != 1) {

                                                if ($localserver == 1) {
                                                                $dir = WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Backup/';
                                                                $ignored = array('.', '..', '.svn', '.htaccess');
                                                                $files = array();
                                                                foreach (scandir($dir) as $file) {
                                                                                if (in_array($file, $ignored)) continue;
                                                                                $files[$file] = filemtime($dir . '/' . $file);
                                                                }

                                                                arsort($files);

                                                                $files = array_keys($files);
                                                                if (count($files) > $backupno) {
                                                                                $i = 1;
                                                                                foreach ($files as $key => $file) {
                                                                                                $ext = explode("_", $file)[0];
                                                                                                if ($ext == get_bloginfo('name')) {
                                                                                                                if ($i >  $backupno) {

                                                                                                                                unlink(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $file);
                                                                                                                }
                                                                                                                $i++;
                                                                                                }
                                                                                }
                                                                }
                                                }

                                                if ($schdule_ftp_server == 1) {

                 if($servercredential->serverinfo != "personal")
                                                                {
                                                                                $apiresponse =  ftp_credential(array('servertype'=>$servercredential->servertype));
                                                        $getftpdata = $apiresponse['message'];
                                                                                $ftpusername = base64_decode($getftpdata['username']); 
                                                                                $hostname = base64_decode($getftpdata['hostname']);
                                                                                $ftppassword = base64_decode($getftpdata['password']);
                                                                                $ftpport = base64_decode($getftpdata['port']);
                                                                                $userinfo = get_path();
                                                                                $rootpath = '';
                                                                                if (substr(trim(base64_decode($getftpdata['ftppath'])), -1) === '/') {
                                                                                                $rootpath = base64_decode($getftpdata['ftppath']);
                                                                                } else {
                                                                                                $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                                                                }
                                                                                $ftppath = $rootpath.$userinfo['message'];
                                                                }
                                                                else{
                                                                                $ftpusername  = $servercredential->username;
                                                                                $hostname = $servercredential->hostname;
                                                                                $ftppassword = $servercredential->password;
                                                                                $ftpport = $servercredential->port;
                                                                                $ftppath      = $servercredential->ftppath;
                                                                }
                                                                if ($servercredential->servertype == 'sftp') {
                                                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                                                $obj = new Hug\Sftp\Sftp;
                                                                                $checkconnectionsftp = $obj::test($hostname, $ftpusername, $ftppassword, $ftpport);
                                                                                if ($checkconnectionsftp === true) {
                                                                                                $ftpbackuplist = $obj::scandir($hostname, $ftpusername, $ftppassword, $ftppath, $ftpport);
                                                                                                krsort($ftpbackuplist);
                                                                                                if (count($ftpbackuplist) > $backupno) {
                                                                                                                $j = 1;
                                                                                                                foreach ($ftpbackuplist as $key => $ftpfilename) {
                                                                                                                                $ext = explode("_", $ftpfilename)[0];

                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                if ($j >  $backupno) {

                                                                                                                                                                $obj::delete($hostname, $ftpusername, $ftppassword, $ftppath . '/' . $ftpfilename, $ftpport);
                                                                                                                                                }
                                                                                                                                                $j++;
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                }
                                                                } else {
                                                                                $ftp_conn = ftp_connect($hostname) or die("Could not connect to $hostname");
                                                                                $checkftplogin = ftp_login($ftp_conn,  $ftpusername, $ftppassword);
                                                                                if ($checkftplogin) {

                                                                                                $contents = ftp_rawlist($ftp_conn, $ftppath);
                                                                                                $results = array();
                                                                                                foreach ($contents as $line) {
                                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                                preg_split('/\s+/', $line, 9);
                                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                                $results[] = array('name' => $name, 'timestamp' => $stamp);
                                                                                                }

                                                                                                usort($results, function ($a, $b) {
                                                                                                                return $a['timestamp'] - $b['timestamp'];
                                                                                                });
                                                                                                krsort($results);
                                                                                                if (count($results) > $backupno) {
                                                                                                                $k = 1;
                                                                                                                foreach ($results as $key => $ftpfilename) {
                                                                                                                                $ext = explode("_", $ftpfilename['name'])[0];

                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                if ($k >  $backupno) {

                                                                                                                                                                ftp_delete($ftp_conn, $ftppath . '/' . $ftpfilename['name']);
                                                                                                                                                }
                                                                                                                                                $k++;
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                }
                                                                }
                                                }
                                }

                                if (!wp_next_scheduled('my_task_hook')) {

                                                wp_schedule_event($timestamp, 'bsoft_sschdule', 'my_task_hook');
                                } else {

                                                wp_unschedule_hook('my_task_hook');
                                                wp_schedule_event($timestamp, 'bsoft_sschdule', 'my_task_hook');
                                }

                                wp_send_json_success(array('status' => 'success', 'type' => $type));
                } catch (Error $e) {
                                echo 'Error schdule function: ',  $e->getMessage(), "\n";
                }
}
/**
* dateDiffInDays  check different days between two dates  
                 
 */
function dateDiffInDays($date1, $date2)
{
                // Calculating the difference in timestamps
                $diff = $date2 - $date1;

                // 1 day = 24 hours
                // 24 * 60 * 60 = 86400 seconds
                return abs(round($diff / 86400));
}


add_action('my_task_hook', 'my_task_function');
/**
* my_task_function  hooks function Backup website on schdule time 
                 
 */
function my_task_function()
{
   
                /**
    
                 *  schdule/export.php   export all website contant in ftp server.
                
                 */
                try {
                                set_time_limit(0);
                                schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'export-schdule','start_datetime' => gmdate('Y-m-d H:i:s')));
                                
                                $return = date("d-m-Y H:i:s") . '-====<br>';
                                $handle = fopen(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/test.text", 'a');
                                fwrite($handle, $return);
                                fclose($handle);

                                global $wpdb;
        
                                $checklicensekey = $wpdb->get_row("SELECT option_value FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");
                                if (!empty($checklicensekey)) {
                                                
                                                $check_expire_key = check_license_key_exipire($checklicensekey->option_value,'Schedule Backup');
                                                $ftpspace = check_ftp_space($checklicensekey->option_value);
                                                if ($check_expire_key === true) {
                                                                require_once plugin_dir_path(__FILE__) . 'includes/view/schdule/export.php';
                                                                $exportfilepaths = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $backupfilename;
                                                                $exportfilename = $backupfilename;
                                                                if ($exportfilepaths !== "") {
                                                                                /**
                                
                                                                                *  vendor/autoload.php   include sftp library.
                                
                                                                                */
                                                                                $fileexportserver = '';
                                                                                $checkftpenable = $wpdb->get_row("SELECT schdule_ftp_server,localserver,backupno,allbackup FROM " . $wpdb->prefix . "crontime");
                                                                                $getftpdata = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype,serverinfo FROM " . $wpdb->prefix . "bsoft_server_credential");
        
                                                                                if (!empty($getftpdata)) {

                                                                                                if (!empty($checkftpenable)  && $checkftpenable->schdule_ftp_server == 1) {
                                                                                                                
                                                                                                                $fileexportserver = 'FTP';
                                                                                                                $dirpath = '';
                                                                                                                $recipient_name = $getftpdata->hostname;
                                                                                                                $ftpuser_name = $getftpdata->username;
                                                                                                                $ftppassword = $getftpdata->password;
                                                                                                                $ftpport = $getftpdata->port;
                                                                                                                $servertype = $getftpdata->servertype;
                                                                                                                $serverinfo = $getftpdata->serverinfo;
                                                                                                                $id = $getftpdata->id;
                                                                                                                $rootpath = '';
                                                                                                                if (substr($getftpdata->ftppath, -1) === '/') {
                                                                                                                                $ftppath = $getftpdata->ftppath . $exportfilename;
                                                                                                                                $dirpath = $getftpdata->ftppath;
                                                                                                                } else {
                                                                                                                                $ftppath = $getftpdata->ftppath . '/' . $exportfilename;
                                                                                                                                $dirpath = $getftpdata->ftppath.'/';
                                                                                                                }

                                                                                                                if ($servertype == "sftp") {
                                                                                                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                                                                                                $obj = new Hug\Sftp\Sftp;
                                                                                                                                if($serverinfo == 'B-soft')
                                                                                                                                {
                                                                                                                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                                                                                                                $getftpdataapi = $apiresponse['message']; 
                                                                                                                                                $recipient_name = base64_decode($getftpdataapi['hostname']);
                                                                                                                                                $ftpuser_name = base64_decode($getftpdataapi['username']); 
                                                                                                                                                $ftppassword = base64_decode($getftpdataapi['password']);
                                                                                                                                                $ftpport = base64_decode($getftpdataapi['port']);
                                                                                                                                                $userinfo = get_path();
                                                                                                                                                $rootpath = '';
                                                                                                                                                if (substr(base64_decode($getftpdataapi['ftppath']), -1) === '/') {
                                                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']);
                                                                                                                                                } else {
                                                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']) . '/';
                                                                                                                                                }
                                                                                                                                                $ftppath = $rootpath.$userinfo['message'];
                                                                                                                                
                                                                                                                                                $ftpscanfile = $obj::scandirsize($recipient_name, $ftpuser_name, $ftppassword, $ftppath, $ftpport);
                                                                                                                                                $ftpbackuplist = [];
                                                                                                                                                foreach ($ftpscanfile as $key => $value) {
                                                                                                                                                                if ($value['filename'] != "." && $value['filename'] != '..') {
                                                                                                                                                                                $backupfiles = $obj::scandirsize($recipient_name, $ftpuser_name, $ftppassword, $ftppath.'/'.$value['filename'], $ftpport);
                                                                                                                                                                                foreach ($backupfiles as $key => $backupsize) {
                                                                                                                                                                                                if ($backupsize['filename'] != "." && $backupsize['filename'] != '..') {
                                                                                                                                                                                                                $ftpbackuplist[] = $backupsize['size'];
                                                                                                                                                                                                }
                                                                                                                                                                                }
                                                                                                                                                                }
                                                                                                                                                }
                                                                                                                                                $dirpath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/';
                                                                                                                                    $ftppath =$rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/'.$exportfilename;
                                                                                                                                                $filesize = filesize($exportfilepaths);
                                                                                                                                                $ftpfilesize = totalsize(array_sum($ftpbackuplist)+$filesize);
                                                                                                                                                
                                                                                                                                                if($ftpspace['message'] < $ftpfilesize)
                                                                                                                                                {
                                                                                                                                                                
                                                                                                                                                                send_notification();
                                                                                                                                                
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                        $obj::upload($recipient_name, $ftpuser_name, $ftppassword, $exportfilepaths, $ftppath,  $ftpport);
                                                                                                                                    }
                                                                                                                                                
                                                                                                                                }
                                                                                                                                else{
                                    $obj::upload($recipient_name, $ftpuser_name, $ftppassword, $exportfilepaths, $ftppath,  $ftpport);
                                                                                                                                }
                                                                                                                                
                                                                                                                } elseif ($servertype == "ftp") {
                                                                                                                                if($serverinfo == 'B-soft')
                                                                                                                                {
                                                                                                                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                                                                                                                $getftpdataapi = $apiresponse['message']; 
                                                                                                                                                $recipient_name = base64_decode($getftpdataapi['hostname']);
                                                                                                                                                $ftpuser_name = base64_decode($getftpdataapi['username']); 
                                                                                                                                                $ftppassword = base64_decode($getftpdataapi['password']);
                                                                                                                                                $ftpport = base64_decode($getftpdataapi['port']);
                                                                                                                                                $userinfo = get_path();
                                                                                                                                                $rootpath = '';
                                                                                                                                                if (substr(base64_decode($getftpdataapi['ftppath']), -1) === '/') {
                                                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']);
                                                                                                                                                } else {
                                                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']) . '/';
                                                                                                                                                }
                                                                                                                                                $ftppath = $rootpath.$userinfo['message'];
                                                                                                                                                $dirpath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/';
                                                                                                                                }
                                                                                                                                $ftp_conn = ftp_connect($recipient_name) or die("Could not connect to $recipient_name");
                                                                                                                                $checkftplogin = ftp_login($ftp_conn, $ftpuser_name, $ftppassword);
                                                                                                                                if ($checkftplogin) {
                                                                                                                                                if($serverinfo == 'B-soft')
                                                                                                                                                {
                                                                                                                                                                
                                                                                                                                                                $contents = ftp_rawlist($ftp_conn, $ftppath);
                                                                                                                                                                
                                                                                                                                                                $ftpbackuplist = array();
                                                                                                                                                                foreach ($contents as $line) {
                                                                                                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                                                                                                preg_split('/\s+/', $line, 9);
                                                                                                
                                                                                                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                                                                                                $ftpbackuplist[] =  $size;
                                                                                                                                                                }
                                                                                                                                                                $filesize = filesize($exportfilepaths);
                                                                                                                                                                $ftpfilesize = totalsize(array_sum($ftpbackuplist)+$filesize);
                                                                                                                                                    
                                                                                                                                                                if($ftpspace['message'] < $ftpfilesize)
                                                                                                                                                                {
                                                                                                                                                                                send_notification();
                                                                                                                                                                                wp_send_json_error("Ftp Space Is Full");
                                                                                                                                                                }
                                                                                                                                                                else{
                                                                                                                                                                                $ftppath =$rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/'.$exportfilename;
                                                                                                                                                                                $ret = ftp_nb_put($ftp_conn, $ftppath, $exportfilepaths, FTP_BINARY, FTP_AUTORESUME);
                                                                                                                                                                                while (FTP_MOREDATA == $ret) {
                                                                                                                                                                                                
                                                                                                                                                                                                $ret = ftp_nb_continue($ftp_conn);
                                                                                                                                                                                }
                                                                                                                                                                                ftp_close($ftp_conn);
                                                                                                                                                                }
                                                                                                                                                
                                                                                                                                                }
                                                                                                                                                else{
                                        $ret = ftp_nb_put($ftp_conn, $ftppath, $exportfilepaths, FTP_BINARY, FTP_AUTORESUME);
                                                                                                                                                                while (FTP_MOREDATA == $ret) {
                                                                                                                                                                                
                                                                                                                                                                                $ret = ftp_nb_continue($ftp_conn);
                                                                                                                                                                }
                                                                                                                                                                ftp_close($ftp_conn);
                                                                                                                                                }
                                                                                                                                                
                                                                                                                                } else {
                                                                                                                                                ftp_close($ftp_conn);
                                                                                                                                                wp_send_json_error("Ftp Detail not exist");
                                                                                                                                }
                                                                                                                } else {
                                                                                                                                wp_send_json_error("Ftp Detail not exist");
                                                                                                                }
                                                                                                }
                                                                                }
                                                                                $size = filesize(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $exportfilename);
                                                                                
                                                                                if (!empty($checkftpenable)  && $checkftpenable->localserver != 1) {
                                                                                                if (file_exists(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $exportfilename)) {
                                                                                                                unlink(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $exportfilename);
                                                                                                }
                                                                                }
                    if (substr($ftppath, -1) === '/') {
                                                                                                $ftppath = $ftppath;
                                                                                } else {
                                                                                                $ftppath = $ftppath;
                                                                                }
                                                                                $fileexportserver = ($checkftpenable->localserver == 1) ? ($fileexportserver == "" ? 'Local' : $fileexportserver . ', Local') : $fileexportserver;
                                                                                if (!empty($checkftpenable)) {
                                                                                                if ($checkftpenable->allbackup != 1 && $checkftpenable->localserver == 1) {

                         
                                                                                                                $dir = WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Backup/';
                                                                                                                $ignored = array('.', '..', '.svn', '.htaccess');
                                                                                                                $files = array();
                                                                                                                foreach (scandir($dir) as $file) {
                                                                                                                                if (in_array($file, $ignored)) continue;
                                                                                                                                $files[$file] = filemtime($dir . '/' . $file);
                                                                                                                }

                                                                                                                arsort($files);

                                                                                                                $files = array_keys($files);
                                                                                                                if (count($files) > $checkftpenable->backupno) {
                                                                                                                                $i = 1;
                                                                                                                                foreach ($files as $key => $file) {
                                                                                                                                                $ext = explode("_", $file)[0];
                                                                                                                                                if ($ext == get_bloginfo('name')) {
                                                                                                                                                                if ($i >  $checkftpenable->backupno) {

                                                                                                                                                                                unlink(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $file);
                                                                                                                                                                }
                                                                                                                                                                $i++;
                                                                                                                                                }
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                                if ($checkftpenable->schdule_ftp_server == 1 && $checkftpenable->allbackup != 1 ) {
                                                                                                                if ($getftpdata->servertype == 'sftp') {
                                                                                                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                                                                                                $obj = new Hug\Sftp\Sftp;
                                                                                                                                $checkconnectionsftp = $obj::test($recipient_name, $ftpuser_name, $ftppassword, $ftpport);
                                                                                                                                if ($checkconnectionsftp === true) {
                                                                                                                                                $ftpbackuplist = $obj::scandir($recipient_name, $ftpuser_name, $ftppassword, $dirpath,$ftpport);
                                                                                                                                                krsort($ftpbackuplist);
                                                                                                                                                if (count($ftpbackuplist) > $checkftpenable->backupno) {
                                                                                                                                                                $j = 1;
                                                                                                                                                                foreach ($ftpbackuplist as $key => $ftpfilename) {
                                                                                                                                                                                $ext = explode("_", $ftpfilename)[0];

                                                                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                                                                if ($j >  $checkftpenable->backupno) {

                                                                                                                                                                                                                $obj::delete($recipient_name, $ftpuser_name,$ftppassword, $dirpath . '/' . $ftpfilename, $ftpport);
                                                                                                                                                                                                }
                                                                                                                                                                                                $j++;
                                                                                                                                                                                }
                                                                                                                                                                }
                                                                                                                                                }
                                                                                                                                }
                                                                                                                } else {
                                                                                                                                $ftp_conn = ftp_connect($recipient_name) or die("Could not connect to $recipient_name");
                                                                                                                                $checkftplogin = ftp_login($ftp_conn, $ftpuser_name, $ftppassword);
                                                                                                                                if ($checkftplogin) {

                                                                                                                                                $contents = ftp_rawlist($ftp_conn, $dirpath);
                                                                                                                                                $results = array();
                                                                                                                                                foreach ($contents as $line) {
                                                                                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                                                                                preg_split('/\s+/', $line, 9);
                                                                                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                                                                                $results[] = array('name' => $name, 'timestamp' => $stamp);
                                                                                                                                                }

                                                                                                                                                usort($results, function ($a, $b) {
                                                                                                                                                                return $a['timestamp'] - $b['timestamp'];
                                                                                                                                                });
                                                                                                                                                krsort($results);
                                                                                                                                                if (count($results) > $checkftpenable->backupno) {
                                                                                                                                                                $k = 1;
                                                                                                                                                                foreach ($results as $key => $ftpfilename) {
                                                                                                                                                                                $ext = explode("_", $ftpfilename['name'])[0];

                                                                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                                                                if ($k > $checkftpenable->backupno) {

                                                                                                                                                                                                                ftp_delete($ftp_conn, $dirpath . '/' . $ftpfilename['name']);
                                                                                                                                                                                                }
                                                                                                                                                                                                $k++;
                                                                                                                                                                                }
                                                                                                                                                                }
                                                                                                                                                }
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                }
                                                                                schdule_start_history(array('filename' => $exportfilename, 'filesize' => $size, 'processtype' => 'end', 'schdule_type' => 'export-schdule', 'end_datetime' => gmdate('Y-m-d H:i:s'), 'servertype' => $fileexportserver));
                                                                } else {
                                                                                schduleexportfunction();
                                                                }
                                                }
                                }
                } catch (Error $e) {
                                echo 'Error my_task_function function: ',  $e->getMessage(), "\n";
                }
}
/**
* schduleexportfunction  call back function when backup failed 
                 
 */
function schduleexportfunction()
{
                try {
                                set_time_limit(0);
                                global $wpdb;
                                require_once plugin_dir_path(__FILE__) . 'includes/view/schdule/export.php';
                                $exportfilepaths = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $backupfilename;
                                $exportfilename = $backupfilename;
                                if ($exportfilepaths !== "") {
                                                /**

                                                *  vendor/autoload.php   include sftp library.

                                                */
                                                $fileexportserver = '';
                                                $checkftpenable = $wpdb->get_row("SELECT schdule_ftp_server,localserver,backupno,allbackup FROM " . $wpdb->prefix . "crontime");
                                                $getftpdata = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype,serverinfo FROM " . $wpdb->prefix . "bsoft_server_credential");

                                                if (!empty($getftpdata)) {

                                                                if (!empty($checkftpenable)  && $checkftpenable->schdule_ftp_server == 1) {
                                                                                $fileexportserver = 'FTP';
                                                                                $dirpath = '';
                                                                                $recipient_name = $getftpdata->hostname;
                                                                                $ftpuser_name = $getftpdata->username;
                                                                                $ftppassword = $getftpdata->password;
                                                                                $ftpport = $getftpdata->port;
                                                                                $servertype = $getftpdata->servertype;
                                                                                $serverinfo = $getftpdata->serverinfo;
                                                                                $id = $getftpdata->id;
                                                                                $rootpath = '';
                                                                                if (substr($getftpdata->ftppath, -1) === '/') {
                                                                                                $ftppath = $getftpdata->ftppath . $exportfilename;
                                                                                                $dirpath = $getftpdata->ftppath;
                                                                                } else {
                                                                                                $ftppath = $getftpdata->ftppath . '/' . $exportfilename;
                                                                                                $dirpath = $getftpdata->ftppath.'/';
                                                                                }

                                                                                if ($servertype == "sftp") {
                                                                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                                                                $obj = new Hug\Sftp\Sftp;
                                                                                                if($serverinfo == 'B-soft')
                                                                                                {
                                                                                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                                                                                $getftpdataapi = $apiresponse['message']; 
                                                                                                                $recipient_name = base64_decode($getftpdataapi['hostname']);
                                                                                                                $ftpuser_name = base64_decode($getftpdataapi['username']); 
                                                                                                                $ftppassword = base64_decode($getftpdataapi['password']);
                                                                                                                $ftpport = base64_decode($getftpdataapi['port']);
                                                                                                                $userinfo = get_path();
                                                                                                                $rootpath = '';
                                                                                                                if (substr(base64_decode($getftpdataapi['ftppath']), -1) === '/') {
                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']);
                                                                                                                } else {
                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']) . '/';
                                                                                                                }
                                                                                                                $ftppath = $rootpath.$userinfo['message'];
                                                                                                
                                                                                                                $ftpscanfile = $obj::scandirsize($recipient_name, $ftpuser_name, $ftppassword, $ftppath, $ftpport);
                                                                                                                $ftpbackuplist = [];
                                                                                                                foreach ($ftpscanfile as $key => $value) {
                                                                                                                                if ($value['filename'] != "." && $value['filename'] != '..') {
                                                                                                                                                $backupfiles = $obj::scandirsize($recipient_name, $ftpuser_name, $ftppassword, $ftppath.'/'.$value['filename'], $ftpport);
                                                                                                                                                foreach ($backupfiles as $key => $backupsize) {
                                                                                                                                                                if ($backupsize['filename'] != "." && $backupsize['filename'] != '..') {
                                                                                                                                                                                $ftpbackuplist[] = $backupsize['size'];
                                                                                                                                                                }
                                                                                                                                                }
                                                                                                                                }
                                                                                                                }
                                                                                                                $dirpath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/';
                                                                                                                $ftppath =$rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/'.$exportfilename;
                                                                                                                $filesize = filesize($exportfilepaths);
                                                                                                                $ftpfilesize = totalsize(array_sum($ftpbackuplist)+$filesize);
                                                                                                                
                                                                                                                if($ftpspace['message'] < $ftpfilesize)
                                                                                                                {
                                                                                                                                
                                                                                                                                send_notification();
                                                                                                                
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                                $obj::upload($recipient_name, $ftpuser_name, $ftppassword, $exportfilepaths, $ftppath,  $ftpport);
                                                                                                                }
                                                                                                                
                                                                                                }
                                                                                                else{
                                                                                                                $obj::upload($recipient_name, $ftpuser_name, $ftppassword, $exportfilepaths, $ftppath,  $ftpport);
                                                                                                }
                                                                                                
                                                                                } elseif ($servertype == "ftp") {
                                                                                                if($serverinfo == 'B-soft')
                                                                                                {
                                                                                                                $apiresponse =  ftp_credential(array('servertype'=>$servertype));
                                                                                                                $getftpdataapi = $apiresponse['message']; 
                                                                                                                $recipient_name = base64_decode($getftpdataapi['hostname']);
                                                                                                                $ftpuser_name = base64_decode($getftpdataapi['username']); 
                                                                                                                $ftppassword = base64_decode($getftpdataapi['password']);
                                                                                                                $ftpport = base64_decode($getftpdataapi['port']);
                                                                                                                $userinfo = get_path();
                                                                                                                $rootpath = '';
                                                                                                                if (substr(base64_decode($getftpdataapi['ftppath']), -1) === '/') {
                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']);
                                                                                                                } else {
                                                                                                                                $rootpath = base64_decode($getftpdataapi['ftppath']) . '/';
                                                                                                                }
                                                                                                                $ftppath = $rootpath.$userinfo['message'];
                                                                                                                $dirpath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/';
                                                                                                }
                                                                                                $ftp_conn = ftp_connect($recipient_name) or die("Could not connect to $recipient_name");
                                                                                                $checkftplogin = ftp_login($ftp_conn, $ftpuser_name, $ftppassword);
                                                                                                if ($checkftplogin) {
                                                                                                                if($serverinfo == 'B-soft')
                                                                                                                {
                                                                                                                                
                                                                                                                                $contents = ftp_rawlist($ftp_conn, $ftppath);
                                                                                                                                
                                                                                                                                $ftpbackuplist = array();
                                                                                                                                foreach ($contents as $line) {
                                                                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                                                                preg_split('/\s+/', $line, 9);
                                                                
                                                                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                                                                $ftpbackuplist[] =  $size;
                                                                                                                                }
                                                                                                                                $filesize = filesize($exportfilepaths);
                                                                                                                                $ftpfilesize = totalsize(array_sum($ftpbackuplist)+$filesize);
                                                                                                                                
                                                                                                                                if($ftpspace['message'] < $ftpfilesize)
                                                                                                                                {
                                                                                                                                                send_notification();
                                                                                                                                                wp_send_json_error("Ftp Space Is Full");
                                                                                                                                }
                                                                                                                                else{
                                                                                                                                                $ftppath =$rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'].'/'.$exportfilename;
                                                                                                                                                $ret = ftp_nb_put($ftp_conn, $ftppath, $exportfilepaths, FTP_BINARY, FTP_AUTORESUME);
                                                                                                                                                while (FTP_MOREDATA == $ret) {
                                                                                                                                                                
                                                                                                                                                                $ret = ftp_nb_continue($ftp_conn);
                                                                                                                                                }
                                                                                                                                                ftp_close($ftp_conn);
                                                                                                                                }
                                                                                                                
                                                                                                                }
                                                                                                                else{
                                                                                                                                $ret = ftp_nb_put($ftp_conn, $ftppath, $exportfilepaths, FTP_BINARY, FTP_AUTORESUME);
                                                                                                                                while (FTP_MOREDATA == $ret) {
                                                                                                                                                
                                                                                                                                                $ret = ftp_nb_continue($ftp_conn);
                                                                                                                                }
                                                                                                                                ftp_close($ftp_conn);
                                                                                                                }
                                                                                                                
                                                                                                } else {
                                                                                                                ftp_close($ftp_conn);
                                                                                                                wp_send_json_error("Ftp Detail not exist");
                                                                                                }
                                                                                } else {
                                                                                                wp_send_json_error("Ftp Detail not exist");
                                                                                }
                                                                }
                                                }
                                                $size = filesize(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $exportfilename);
                                                
                                                if (!empty($checkftpenable)  && $checkftpenable->localserver != 1) {
                                                                if (file_exists(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $exportfilename)) {
                                                                                unlink(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $exportfilename);
                                                                }
                                                }
                                                if (substr($ftppath, -1) === '/') {
                                                                $ftppath = $ftppath;
                                                } else {
                                                                $ftppath = $ftppath;
                                                }
                                                $fileexportserver = ($checkftpenable->localserver == 1) ? ($fileexportserver == "" ? 'Local' : $fileexportserver . ', Local') : $fileexportserver;
                                                if (!empty($checkftpenable)) {
                                                                if ($checkftpenable->allbackup != 1 && $checkftpenable->localserver == 1) {


                                                                                $dir = WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Backup/';
                                                                                $ignored = array('.', '..', '.svn', '.htaccess');
                                                                                $files = array();
                                                                                foreach (scandir($dir) as $file) {
                                                                                                if (in_array($file, $ignored)) continue;
                                                                                                $files[$file] = filemtime($dir . '/' . $file);
                                                                                }

                                                                                arsort($files);

                                                                                $files = array_keys($files);
                                                                                if (count($files) > $checkftpenable->backupno) {
                                                                                                $i = 1;
                                                                                                foreach ($files as $key => $file) {
                                                                                                                $ext = explode("_", $file)[0];
                                                                                                                if ($ext == get_bloginfo('name')) {
                                                                                                                                if ($i >  $checkftpenable->backupno) {

                                                                                                                                                unlink(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $file);
                                                                                                                                }
                                                                                                                                $i++;
                                                                                                                }
                                                                                                }
                                                                                }
                                                                }
                                                                if ($checkftpenable->schdule_ftp_server == 1 && $checkftpenable->allbackup != 1) {
                                                                                if ($getftpdata->servertype == 'sftp') {
                                                                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                                                                $obj = new Hug\Sftp\Sftp;
                                                                                                $checkconnectionsftp = $obj::test($recipient_name, $ftpuser_name, $ftppassword, $ftpport);
                                                                                                if ($checkconnectionsftp === true) {
                                                                                                                $ftpbackuplist = $obj::scandir($recipient_name, $ftpuser_name, $ftppassword, $dirpath,$ftpport);
                                                                                                                krsort($ftpbackuplist);
                                                                                                                if (count($ftpbackuplist) > $checkftpenable->backupno) {
                                                                                                                                $j = 1;
                                                                                                                                foreach ($ftpbackuplist as $key => $ftpfilename) {
                                                                                                                                                $ext = explode("_", $ftpfilename)[0];

                                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                                if ($j >  $checkftpenable->backupno) {

                                                                                                                                                                                $obj::delete($recipient_name, $ftpuser_name,$ftppassword, $dirpath . '/' . $ftpfilename, $ftpport);
                                                                                                                                                                }
                                                                                                                                                                $j++;
                                                                                                                                                }
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                } else {
                                                                                                $ftp_conn = ftp_connect($recipient_name) or die("Could not connect to $recipient_name");
                                                                                                $checkftplogin = ftp_login($ftp_conn, $ftpuser_name, $ftppassword);
                                                                                                if ($checkftplogin) {

                                                                                                                $contents = ftp_rawlist($ftp_conn, $dirpath);
                                                                                                                $results = array();
                                                                                                                foreach ($contents as $line) {
                                                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                                                preg_split('/\s+/', $line, 9);
                                                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                                                $results[] = array('name' => $name, 'timestamp' => $stamp);
                                                                                                                }

                                                                                                                usort($results, function ($a, $b) {
                                                                                                                                return $a['timestamp'] - $b['timestamp'];
                                                                                                                });
                                                                                                                krsort($results);
                                                                                                                if (count($results) > $checkftpenable->backupno) {
                                                                                                                                $k = 1;
                                                                                                                                foreach ($results as $key => $ftpfilename) {
                                                                                                                                                $ext = explode("_", $ftpfilename['name'])[0];

                                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                                if ($k > $checkftpenable->backupno) {

                                                                                                                                                                                ftp_delete($ftp_conn, $dirpath . '/' . $ftpfilename['name']);
                                                                                                                                                                }
                                                                                                                                                                $k++;
                                                                                                                                                }
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                }
                                                                }
                                                }
                                                schdule_start_history(array('filename' => $exportfilename, 'filesize' => $size, 'processtype' => 'end', 'schdule_type' => 'export-schdule', 'end_datetime' => gmdate('Y-m-d H:i:s'), 'servertype' => $fileexportserver));
                                } else {
                                                schduleexportfunction();
                                }
                } catch (Error $e) {
                                echo 'Error schduleexportfunction function: ',  $e->getMessage(), "\n";
                }
}

/**
* save lisencekey   save save lisencekey 
                 
 */

add_action('wp_ajax_savelicensekey', 'savelicensekey');
add_action('wp_ajax_nopriv_savelicensekey', 'savelicensekey');
function savelicensekey()
{
                set_time_limit(0);
                global $wpdb;
                try {
                                $email  = '';
                                $lisencekey = '';
                                if (isset($_POST['email'])) {
                                                $email = sanitize_text_field($_POST['email']);
                                }
                                if (isset($_POST['lisencekey'])) {
                                                $lisencekey = sanitize_text_field($_POST['lisencekey']);
                                }
                                $curl = curl_init();
                                curl_setopt_array($curl, array(
                                                CURLOPT_URL => 'http://127.0.0.1:8000/api/activelicenses',
                                                CURLOPT_RETURNTRANSFER => true,
                                                CURLOPT_ENCODING => '',
                                                CURLOPT_MAXREDIRS => 10,
                                                CURLOPT_TIMEOUT => 0,
                                                CURLOPT_FOLLOWLOCATION => true,
                                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                                CURLOPT_CUSTOMREQUEST => 'POST',
                                                CURLOPT_POSTFIELDS => array('licence_key' => $lisencekey, 'email' => $email, 'domain_name' => $_SERVER['HTTP_HOST']),
                                                CURLOPT_HTTPHEADER => array(
                                                                'Accept: application/json'
                                                ),
                                ));
                                $response = curl_exec($curl);

                                curl_close($curl);
                                $apiresponse = json_decode($response, true);

                                if ($apiresponse['status']) {


                                                $checklicensekey = $wpdb->get_row("SELECT * FROM " . $wpdb->prefix . "options WHERE `option_name` = 'Bsoft_license_key' ");

                                                if (!empty($checklicensekey)) {
                                                                //echo '<pre>'; print_r($checklicensekey); die();
                                                                $result = $wpdb->update($wpdb->prefix . 'options', array('option_name' => 'Bsoft_license_key', 'option_value' => $lisencekey), array('option_name' => 'Bsoft_license_key'));

                                                                if ($result) {
                                                                                wp_send_json_success(array("data" => $apiresponse['message']));
                                                                } else {
                                                                                wp_send_json_error(array("data" => 'something went wrong'));
                                                                }
                                                } else {
                                                                $result =  $wpdb->insert($wpdb->prefix . 'options', array('option_name' => 'Bsoft_license_key', 'option_value' => $lisencekey));
                                                                if ($result) {
                                                                                wp_send_json_success(array("data" => $apiresponse['message']));
                                                                } else {
                                                                                wp_send_json_error(array("data" => 'something went wrong'));
                                                                }
                                                }
                                } else {
                                                wp_send_json_error(array("data" => $apiresponse['message']));
                                }
                } catch (\Exception $ex) {
                                echo $ex->getMessage();
                                wp_send_json_error(array("data" => 'something went wrong'));
                }
}
function backup_schdule()
{
                try {
                                set_time_limit(0);
                                function filesize_formatted($path)
                                {
                                                $size = filesize($path);
                                                $units = array('B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');
                                                $power = $size > 0 ? floor(log($size, 1024)) : 0;
                                                return number_format($size / pow(1024, $power), 2, '.', ',') . ' ' . $units[$power];
                                }

                                require_once plugin_dir_path(__FILE__) . 'includes/view/backup/index.php';
                } catch (\Exception $ex) {
                                echo $ex->getMessage();
                                wp_send_json_error(array("data" => 'something went wrong'));
                }
}


add_action('wp_ajax_delete_file', 'delete_file');
add_action('wp_ajax_nopriv_delete_file', 'delete_file');
function delete_file()
{
                try {
                                set_time_limit(0);
                                $file = '';
                                if (isset($_POST['filepath'])) {
                                                $file = sanitize_text_field($_POST['filepath']);
                                }
                                if (file_exists($file)) {
                                                unlink($file);
                                                wp_send_json_success(array('status' => 'success', 'message' => "File Remove Successfully"));
                                } else {

                                                wp_send_json_error(array('status' => 'error', 'message' => "File Not Exist "));
                                }
                } catch (\Exception $ex) {
                                echo $ex->getMessage();
                                wp_send_json_error(array("data" => 'something went wrong'));
                }
}
function filesize_length($path)
{
                $size = filesize($path);
                $units = array('B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');
                $power = $size > 0 ? floor(log($size, 1024)) : 0;
                return number_format($size / pow(1024, $power), 2, '.', ',') . ' ' . $units[$power];
}
add_action('wp_ajax_removebackup', 'removebackup');
add_action('wp_ajax_nopriv_removebackup', 'removebackup');
function removebackup()
{
                try {
                                set_time_limit(0);
                                global $wpdb;
                                $filename = sanitize_text_field($_POST['filename']);
                                $localserver = sanitize_text_field($_POST['localserver']);
                                $get_schdule = $wpdb->get_row("SELECT backupno,allbackup FROM " . $wpdb->prefix . "crontime  order by id desc ");
                                $servercredential = $wpdb->get_row('select `id`,`hostname`,`username`,`password`,`port`,`ftppath`,`servertype`,`serverinfo` FROM ' . $wpdb->prefix . 'bsoft_server_credential ORDER BY id DESC LIMIT 1');
                                $servertype = sanitize_text_field($_POST['servertype']);
                                $sizename = filesize_length(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $filename);
                                $size = filesize(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $filename);
                                if($localserver)
                                {
                                                unlink(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $filename);
                                }
                                
                                if (!empty($get_schdule)) {
                                                if ($get_schdule->allbackup != 1) {

                                                                $dir = WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Backup/';
                                                                $ignored = array('.', '..', '.svn', '.htaccess');
                                                                $files = array();
                                                                foreach (scandir($dir) as $file) {
                                                                                if (in_array($file, $ignored)) continue;
                                                                                $files[$file] = filemtime($dir . '/' . $file);
                                                                }

                                                                arsort($files);

                                                                $files = array_keys($files);
                                                                if (count($files) > $get_schdule->backupno) {
                                                                                $i = 1;
                                                                                foreach ($files as $key => $file) {
                                                                                                $ext = explode("_", $file)[0];
                                                                                                if ($ext == get_bloginfo('name')) {
                                                                                                                if ($i >  $get_schdule->backupno) {

                                                                                                                                unlink(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Backup/" . $file);
                                                                                                                }
                                                                                                                $i++;
                                                                                                }
                                                                                }
                                                                }
                                                }
                                                if ($_POST['servertype'] == 'ftp' && $get_schdule->allbackup != 1) {
   
                                                                if($servercredential->serverinfo != "personal")
                                                                {
                                                                   $apiresponse =  ftp_credential(array('servertype'=>$servercredential->servertype));
                                                                   $getftpdata = $apiresponse['message'];
                                                                   $ftpusername = base64_decode($getftpdata['username']); 
                                                                   $hostname = base64_decode($getftpdata['hostname']);
                                                                   $ftppassword = base64_decode($getftpdata['password']);
                                                                   $ftpport = base64_decode($getftpdata['port']);
                                                                   $userinfo = get_path();
                                                                   $rootpath = '';
                                                                   if (substr(trim(base64_decode($getftpdata['ftppath'])), -1) === '/') {
                                                                                   $rootpath = base64_decode($getftpdata['ftppath']);
                                                                   } else {
                                                                                   $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                                                   }
                                                                   $ftppath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'];
                                                                }
                                                                else{
                                                                   $ftpusername  = $servercredential->username;
                                                                   $hostname = $servercredential->hostname;
                                                                   $ftppassword = $servercredential->password;
                                                                   $ftpport = $servercredential->port;
                                                                   $ftppath      = $servercredential->ftppath;
                                                                }
                                                                if ($servercredential->servertype == 'sftp') {
                                                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                                                $obj = new Hug\Sftp\Sftp;
                                                                                $checkconnectionsftp = $obj::test($hostname,$ftpusername, $ftppassword, $ftpport);
                                                                                if ($checkconnectionsftp === true) {
                                                                                                $ftpbackuplist = $obj::scandir($hostname, $ftpusername, $ftppassword, $ftppath, $ftpport);
                                                                                                krsort($ftpbackuplist);
                                                                                                if (count($ftpbackuplist) > $get_schdule->backupno) {
                                                                                                                $j = 1;
                                                                                                                foreach ($ftpbackuplist as $key => $ftpfilename) {
                                                                                                                                $ext = explode("_", $ftpfilename)[0];

                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                if ($j >  $get_schdule->backupno) {

                                                                                                                                                                $obj::delete($hostname, $ftpusername,  $ftppassword, $ftppath . '/' . $ftpfilename, $ftpport);
                                                                                                                                                }
                                                                                                                                                $j++;
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                }
                                                                } else {
                                                                                $ftp_conn = ftp_connect($hostname) or die("Could not connect to $hostname");
                                                                                $checkftplogin = ftp_login($ftp_conn, $ftpusername, $ftppassword);
                                                                                if ($checkftplogin) {

                                                                                                $contents = ftp_rawlist($ftp_conn, $ftppath);
                                                                                                $results = array();
                                                                                                foreach ($contents as $line) {
                                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                                preg_split('/\s+/', $line, 9);
                                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                                $results[] = array('name' => $name, 'timestamp' => $stamp);
                                                                                                }

                                                                                                usort($results, function ($a, $b) {
                                                                                                                return $a['timestamp'] - $b['timestamp'];
                                                                                                });
                                                                                                krsort($results);
                                                                                                if (count($results) > $get_schdule->backupno) {
                                                                                                                $k = 1;
                                                                                                                foreach ($results as $key => $ftpfilename) {
                                                                                                                                $ext = explode("_", $ftpfilename['name'])[0];

                                                                                                                                if ($ext == get_bloginfo('name')) {

                                                                                                                                                if ($k > $get_schdule->backupno) {

                                                                                                                                                                ftp_delete($ftp_conn, $ftppath . '/' . $ftpfilename['name']);
                                                                                                                                                }
                                                                                                                                                $k++;
                                                                                                                                }
                                                                                                                }
                                                                                                }
                                                                                }
                                                                }
                                                }
                                }


                                schdule_start_history(array('filename' => $filename, 'filesize' => $size, 'processtype' => 'end', 'schdule_type' => 'export-manual', 'end_datetime' => gmdate('Y-m-d H:i:s'), 'servertype' => $servertype));
                                wp_send_json_success(array('filesize'=>$sizename));
                } catch (\Exception $ex) {
                                echo $ex->getMessage();
                                wp_send_json_error(array("data" => 'something went wrong'));
                }
}
function ftp_backup()
{
                try {
                                error_reporting(0);
                                set_time_limit(0);
                                global $wpdb;
                                
                                function filesize_formatted($size)
                                {

                                                $units = array('B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');
                                                $power = $size > 0 ? floor(log($size, 1024)) : 0;
                                                return number_format($size / pow(1024, $power), 2, '.', ',') . ' ' . $units[$power];
                                }
                                $servercredential = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype,`serverinfo` FROM " . $wpdb->prefix . "bsoft_server_credential");
                                if($servercredential->serverinfo != "personal")
                                {
                                   $apiresponse =  ftp_credential(array('servertype'=>$servercredential->servertype));
                                   $getftpdata = $apiresponse['message'];
                
                                   $ftpusername = base64_decode($getftpdata['username']); 
                                   $hostname = base64_decode($getftpdata['hostname']);
                                   $ftppassword = base64_decode($getftpdata['password']);
                                   $ftpport = base64_decode($getftpdata['port']);
                                   $userinfo = get_path();
                                   $rootpath = '';
                                   if (substr(trim(base64_decode($getftpdata['ftppath'])), -1) === '/') {
                                                   $rootpath = base64_decode($getftpdata['ftppath']);
                                   } else {
                                                   $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                   }
                                   $ftppath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'];
                                
                                
                                }
                                else{
                                   $ftpusername  = $servercredential->username;
                                   $hostname = $servercredential->hostname;
                                   $ftppassword = $servercredential->password;
                                   $ftpport = $servercredential->port;
                                   $ftppath      = $servercredential->ftppath;
                                }

                                $ftpbackuplist = [];
                                if ($servercredential->servertype == 'sftp') {
                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                $obj = new Hug\Sftp\Sftp;
            
                                                $checkconnectionsftp = $obj::test($hostname,  $ftpusername, $ftppassword,$ftpport);
                                                if ($checkconnectionsftp === true) {
                                                                
                                                                $ftpscanfile = $obj::scandirsize($hostname,  $ftpusername, $ftppassword, $ftppath, $ftpport);
                                                                
                                                                foreach ($ftpscanfile as $key => $value) {
                                                                                if ($value['filename'] != "." && $value['filename'] != '..') {
                                                                                                $ftpbackuplist[] = array('name' => $value['filename'], 'timestamp' => $value['mtime'], 'size' => $value['size']);
                                                                                }
                                                                }

                                                                krsort($ftpbackuplist);
                                                }
                                                else{
                                                                echo '<div class="alert alert-danger mt-4" role="alert" style="margin-top:21px !important;">Wrong Ftp Credential</div>';
                                                }
                                } else if ($servercredential->servertype == 'ftp') {
        
                                                $ftp_conn = ftp_connect($hostname) ;
                                                if($ftp_conn == true)
                                                {
                                                                
                                                                $checkftplogin = ftp_login($ftp_conn, $ftpusername, $ftppassword);
                                                                if ($checkftplogin) {
                
                                                                                $contents = ftp_rawlist($ftp_conn, $ftppath);
                
                                                                                $ftpbackuplist = array();
                                                                                foreach ($contents as $line) {
                                                                                                list($perms, $links, $user, $group, $size, $d1, $d2, $d3, $name) =
                                                                                                                preg_split('/\s+/', $line, 9);
                
                                                                                                $stamp = strtotime(implode(' ', array($d1, $d2, $d3)));
                                                                                                $ftpbackuplist[] = array('name' => $name, 'timestamp' => $stamp, 'size' => $size);
                                                                                }
                
                                                                                usort($ftpbackuplist, function ($a, $b) {
                                                                                                return $a['timestamp'] - $b['timestamp'];
                                                                                });
                                                                                krsort($ftpbackuplist);
                                                                //            echo '<pre>'; print_r($ftpbackuplist); die();
                                                                }
                                                }
                                                else{
                                                                echo '<div class="alert alert-danger mt-4" role="alert" style="margin-top:21px !important;">Wrong Ftp Credential</div>';
                                                }
                                                
                                }

                                require_once plugin_dir_path(__FILE__) . 'includes/view/backup/ftpbackup.php';
                } catch (\Exception $ex) {
                                echo $ex->getMessage();
                                wp_send_json_error(array("data" => 'something went wrong'));
                }
}

add_action('wp_ajax_download_ftpfile', 'download_ftpfile');
add_action('wp_ajax_nopriv_download_ftpfile', 'download_ftpfile');
function download_ftpfile()
{
try{
                                set_time_limit(0);
                                global $wpdb;
                                $filename = sanitize_text_field($_POST['filepath']);
                                function deleteDirectory($dir) {
                                                if (!file_exists($dir)) {
                                                                return true;
                                                }
                                
                                                if (!is_dir($dir)) {
                                                                return unlink($dir);
                                                }
                                
                                                foreach (scandir($dir) as $item) {
                                                                if ($item == '.' || $item == '..') {
                                                                                continue;
                                                                }
                                
                                                                if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) {
                                                                                return false;
                                                                }
                                
                                                }
                                
                                                return rmdir($dir);
                                }
                                deleteDirectory(WP_CONTENT_DIR.'/BsoftTechnology_SCMS_download/');
                                if (!file_exists(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_download')) {
                                                mkdir(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_download', 0777, true);
                                } else {
                                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_download', 0777);
                                }
                                $servercredential = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype,`serverinfo` FROM " . $wpdb->prefix . "bsoft_server_credential");
                                if($servercredential->serverinfo != "personal")
                                {
                                   $apiresponse =  ftp_credential(array('servertype'=>$servercredential->servertype));
                                   $getftpdata = $apiresponse['message'];
                                   $ftpusername = base64_decode($getftpdata['username']); 
                                   $hostname = base64_decode($getftpdata['hostname']);
                                   $ftppassword = base64_decode($getftpdata['password']);
                                   $ftpport = base64_decode($getftpdata['port']);
                                   $userinfo = get_path();
                                   $rootpath = '';
                                   if (substr(trim(base64_decode($getftpdata['ftppath'])), -1) === '/') {
                                                   $rootpath = base64_decode($getftpdata['ftppath']);
                                   } else {
                                                   $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                   }
                                   $ftppath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'];
                                }
                                else{
                                   $ftpusername  = $servercredential->username;
                                   $hostname = $servercredential->hostname;
                                   $ftppassword = $servercredential->password;
                                   $ftpport = $servercredential->port;
                                   $ftppath      = $servercredential->ftppath;
                                }
                                if ($_POST['filetype'] == 'sftp') {

                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                $obj = new Hug\Sftp\Sftp;
                                                
                                                $checkconnectionsftp = $obj::test($hostname, $ftpusername, $ftppassword,  $ftpport);
                                                if ($checkconnectionsftp === true) {

                                                                $remote_file =   $ftppath.'/'.$filename;
                                                                $exportfilename = $filename;
                                                                $local_file = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_download/" . $exportfilename;
                                                                $downloadfile = content_url() . "/BsoftTechnology_SCMS_download/" .$exportfilename;
                                                                $test = $obj::download($hostname, $ftpusername, $ftppassword, $remote_file, $local_file, $ftpport);
                                                                if ($test) {
                                                                                wp_send_json_success(array('status' => 'success', 'file' => $downloadfile));
                                                                } else {
                                                                                wp_send_json_error(array('status' => 'error', 'message' => "Something went wrong"));
                                                                }
                                                } else {
                                                                wp_send_json_error(array('status' => 'error', 'message' => "Please Save Valid Credential Of Ftp"));
                                                }
                                } else {

                                

                                                $ftp_conn = ftp_connect($hostname) or die("Could not connect to $hostname");

                                                $checkftplogin = ftp_login($ftp_conn, $ftpusername, $ftppassword);

                                                if ($checkftplogin) {
                                                                $listing = ftp_nlist($ftp_conn, $ftppath);
                                                                if (!empty($listing)) {
                                                                                $server_file =   $ftppath.'/'.$filename;
                                                                                
                                                                                $exportfilename = $filename;
                                                                                $local_file = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_download/" . $exportfilename;
                                                                                $downloadfile = content_url() . "/BsoftTechnology_SCMS_download/" . $exportfilename;
                                                                                if (ftp_get($ftp_conn, $local_file, $server_file, FTP_BINARY)) {
                                                                                                ftp_close($ftp_conn);
                                                                                                wp_send_json_success(array('status' => 'success', 'file' => $downloadfile));
                                                                                } else {
                                                                                                ftp_close($ftp_conn);
                                                                                                wp_send_json_error(array("message" => "Something Went Wrong"));
                                                                                }
                                                                } else {
                                                                                wp_send_json_error(array("message" => "Back up Not exist Please check correct Path"));
                                                                }
                                                }
                                }
   }
catch (\Exception $ex) {
                echo $ex->getMessage();
                wp_send_json_error(array("data" => 'something went wrong'));
  }
}
add_action('wp_ajax_delete_file_ftp', 'delete_file_ftp');
add_action('wp_ajax_nopriv_delete_file_ftp', 'delete_file_ftp');
function delete_file_ftp()
{
                try{
                global  $wpdb;
                $servercredential = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype,`serverinfo` FROM " . $wpdb->prefix . "bsoft_server_credential");
                $filename = sanitize_text_field($_POST['filepath']);
                if($servercredential->serverinfo != "personal")
                                {
                                   $apiresponse =  ftp_credential(array('servertype'=>$servercredential->servertype));
                                   $getftpdata = $apiresponse['message'];
                                   $ftpusername = base64_decode($getftpdata['username']); 
                                   $hostname = base64_decode($getftpdata['hostname']);
                                   $ftppassword = base64_decode($getftpdata['password']);
                                   $ftpport = base64_decode($getftpdata['port']);
                                   $userinfo = get_path();
                                   $rootpath = '';
                                   if (substr(trim(base64_decode($getftpdata['ftppath'])), -1) === '/') {
                                                   $rootpath = base64_decode($getftpdata['ftppath']);
                                   } else {
                                                   $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                   }
                                   $ftppath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'];
                                }
                                else{
                                   $ftpusername  = $servercredential->username;
                                   $hostname = $servercredential->hostname;
                                   $ftppassword = $servercredential->password;
                                   $ftpport = $servercredential->port;
                                   $ftppath      = $servercredential->ftppath;
                                }
                if ($_POST['filetype'] == "sftp") {
                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                $obj = new Hug\Sftp\Sftp;
        $ftppath = $ftppath.'/'.$filename;
                                $checkconnectionsftp = $obj::test( $hostname, $ftpusername, $ftppassword, $ftpport);
                                if ($checkconnectionsftp === true) {
                                                $response = $obj::delete( $hostname, $ftpusername, $ftppassword, $ftppath, $ftpport);
                                                if ($response) {
                                                                wp_send_json_success(array('status' => 'success', 'message' => "File Remove Successfully"));
                                                } else {
                                                                wp_send_json_error(array('status' => 'error', 'message' => "Something went wrong"));
                                                }
                                }
                } else {
                                $ftppath = $ftppath.'/'.$filename;
                                
                                $ftp_conn = ftp_connect( $hostname) or die("Could not connect to $hostname");
                                $checkftplogin = ftp_login($ftp_conn, $ftpusername, $ftppassword);
                                if ($checkftplogin) {

                                                $response = ftp_delete($ftp_conn, $ftppath);
                                                if ($response) {
                                                                wp_send_json_success(array('status' => 'success', 'message' => "File Remove Successfully"));
                                                } else {
                                                                wp_send_json_error(array('status' => 'error', 'message' => "Something went wrong"));
                                                }
                                }
                }
}
catch (\Exception $ex) {
                echo $ex->getMessage();
                wp_send_json_error(array("data" => 'something went wrong'));
}
}


add_action('wp_ajax_restorebackup', 'restorebackup');
add_action('wp_ajax_nopriv_restorebackup', 'restorebackup');

function restorebackup()
{
                if (!file_exists(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import')) {
                                mkdir(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777, true);
                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777);
                } else {
                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777);
                }
                $source = $_POST['file'];
                $exportfilename = end(array_filter(explode('/', $source)));
                $destination = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_import/" . end(array_filter(explode('/', $source)));

if( !copy($source, $destination) ) { 
    wp_send_json_error(array('message'=>'Something Went Wrong')); 
} 
else { 
                 schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'import-manual', 'servertype' => 'ftp','start_datetime' => gmdate('Y-m-d H:i:s')));
                wp_send_json_success(array('file' => $exportfilename, 'emaildomail' => $emaildomail));
                } 
}

/**
* restore the backup from ftp 
 */

add_action('wp_ajax_restorebackupftp', 'restorebackupftp');
add_action('wp_ajax_nopriv_restorebackupftp', 'restorebackupftp');


function restorebackupftp()
{
                try{
                                set_time_limit(0);
                                global $wpdb;
                                $emaildomail =0;
                                $filename = sanitize_text_field($_POST['file']);
                                if (!file_exists(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import')) {
                                                mkdir(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777, true);
                                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777);
                                } else {
                                                chmod(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import', 0777);
                                }
                                $servercredential = $wpdb->get_row("SELECT id,hostname,username,password,port,ftppath,servertype,serverinfo FROM " . $wpdb->prefix . "bsoft_server_credential");
        if($servercredential->serverinfo != "personal")
                                {
                                   $apiresponse =  ftp_credential(array('servertype'=>$servercredential->servertype));
                                   $getftpdata = $apiresponse['message'];
                                   $ftpusername = base64_decode($getftpdata['username']); 
                                   $hostname = base64_decode($getftpdata['hostname']);
                                   $ftppassword = base64_decode($getftpdata['password']);
                                   $ftpport = base64_decode($getftpdata['port']);
                                   $userinfo = get_path();
                                   $rootpath = '';
                                   if (substr(trim(base64_decode($getftpdata['ftppath'])), -1) === '/') {
                                                   $rootpath = base64_decode($getftpdata['ftppath']);
                                   } else {
                                                   $rootpath = base64_decode($getftpdata['ftppath']) . '/';
                                   }
                                   $ftppath = $rootpath.$userinfo['message'].'/'.$_SERVER['HTTP_HOST'];
                                }
                                else{
                                   $ftpusername  = $servercredential->username;
                                   $hostname = $servercredential->hostname;
                                   $ftppassword = $servercredential->password;
                                   $ftpport = $servercredential->port;
                                   $ftppath      = $servercredential->ftppath;
                                }
                                if ($servercredential->servertype == 'sftp') {
           
                                                $ftp = require_once plugin_dir_path(__FILE__) . 'vendor/autoload.php';
                                                $obj = new Hug\Sftp\Sftp;
                                                
                                                $checkconnectionsftp = $obj::test($hostname,$ftpusername, $ftppassword, $ftpport);
                                                if ($checkconnectionsftp === true) {
                $ftppath = $ftppath.'/'.$filename;
                                                                $remote_file =  $ftppath;
                                                                $exportfilename =$filename;
                                                                $local_file = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Import/" .$filename;
                                                                $downloadfile = content_url() . "/BsoftTechnology_SCMS_Import/" .$filename;
                                                ;
                                                                $test = $obj::download($hostname, $ftpusername, $ftppassword, $remote_file, $local_file, $ftpport);
                                                                
                                                                if ($test) {
                                                                                schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'import-manual', 'servertype' => 'sftp','start_datetime' => gmdate('Y-m-d H:i:s')));
                                                                                wp_send_json_success(array('file' => $exportfilename, 'emaildomail' => $emaildomail));
                                                                                
                                                                } else {
                                                                                wp_send_json_error(array('status' => 'error', 'message' => "Something went wrong"));
                                                                }
                                                } else {
                                                                wp_send_json_error(array('status' => 'error', 'message' => "Please Save Valid Credential Of Ftp"));
                                                }
                                } else {

                                                

                                                $ftp_conn = ftp_connect($hostname) or die("Could not connect to $hostname");

                                                $checkftplogin = ftp_login($ftp_conn, $ftpusername, $ftppassword);

                                                if ($checkftplogin) {
                                                                $listing = ftp_nlist($ftp_conn, $ftppath);
                                                                if (!empty($listing)) {
                                                                                $ftppath = $ftppath.'/'.$filename;
                                                                                $exportfilename = $filename;
                                                                                $local_file = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Import/" . $filename;
                                                                                $downloadfile = content_url() . "/BsoftTechnology_SCMS_Import/" . $filename;
                                                                                if (ftp_get($ftp_conn, $local_file, $ftppath, FTP_BINARY)) {
                                                                                                ftp_close($ftp_conn);
                                                                                                schdule_start_history(array('domain_name' => $_SERVER['HTTP_HOST'], 'processtype' => 'start', 'schdule_type' => 'import-manual', 'servertype' => 'ftp','start_datetime' => gmdate('Y-m-d H:i:s')));
                                                                                                wp_send_json_success(array('file' => $exportfilename, 'emaildomail' => $emaildomail));
                                                                                } else {
                                                                                                ftp_close($ftp_conn);
                                                                                                wp_send_json_error(array("message" => "Something Went Wrong"));
                                                                                }
                                                                } else {
                                                                                wp_send_json_error(array("message" => "Back up Not exist Please check correct Path"));
                                                                }
                                                }
                                }
   }
catch (\Exception $ex) {
                echo $ex->getMessage();
                wp_send_json_error(array("data" => 'something went wrong'));
  }
}
add_action('wp_ajax_merge', 'merge');
add_action('wp_ajax_nopriv_merge', 'merge');

function merge()
{
                $filename = $_POST['filename'];
                $totalChunks = $_POST['totalChunks'];
                $targetDir = WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Import/";
                $targetFile = $targetDir . $filename;
                $fp =  fopen($targetFile, "w");
                for ($i = 0; $i < $totalChunks; $i++) {
                  $chunk = file_get_contents(WP_CONTENT_DIR . "/BsoftTechnology_SCMS_Import/".$filename.'.part_' . $i);
                  fwrite($fp, $chunk);
                  unlink(WP_CONTENT_DIR . '/BsoftTechnology_SCMS_Import/' .$filename.'.part_' . $i);
                }

                fclose($fp);

                // Send success response
                $response = array(
                                'status' => 'success',
                                'message' => 'File uploaded successfully',
                                'file'=>$_POST['filename'],
                                'emaildomail'=>'test$chetu.com',
                                'success'=>true
  
                  );
                echo json_encode($response);
                die;
}

From: Sweta Sangam 
Sent: 03 March 2023 21:53
To: Vipin Yadav <vipiny@chetu.com>
Subject: chunk file upload code

function callback(response) {

    //jQuery('#show_loader_import').hide();
    if (response.success == false) {
        swal({
            title: response.data,
            icon: "warning",
        })
    }
    else {
        swal({
            title: "Are you sure?",
            text: "It will be cleaning your database files and upload new files and database",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {

                if (willDelete) {
                    jQuery('#exampleModal').modal('show');
                    jQuery('#showimportprogress').html(' Progress ....');
                    jQuery('.bar').attr('style', 'width:2%');
                    jQuery('.perc').html('2%');
                    importfilename = response.file;
                    //importfilename = response.data.file;
                    var datavalue = {
                        'action': 'ImporBackup',
                        'emaildomail': response.emaildomail,//response.data.emaildomail
                        'exportfilename': importfilename
                    };
                    jQuery.ajax
                        ({
                            type: 'post',
                            url: ajaxurl,
                            dataType: 'JSON',
                            data: datavalue,
                            success: function (responseimport) {

                                if (responseimport.data.status == 'success') {
                                    jQuery('#showimportprogress').html('Media  Progress ....');
                                    jQuery('.bar').attr('style', 'width:2%');
                                    jQuery('.perc').html('2%');
                                    importdatafilepath = responseimport.data.file;
                                    jQuery.ajax
                                        ({
                                            type: 'post',
                                            url: ajaxurl,
                                            dataType: 'JSON',
                                            data: { 'action': 'mediaimport', 'filename': importdatafilepath },
                                            success: function (resultmedia) {
                                                jQuery('#showimportprogress').html('Themes  Progress ....');
                                                jQuery('.bar').attr('style', 'width:20%');
                                                jQuery('.perc').html('20%');
                                                jQuery.ajax
                                                    ({
                                                        type: 'post',
                                                        url: ajaxurl,
                                                        dataType: 'JSON',
                                                        data: { 'action': 'themeimport', 'filename': importdatafilepath },
                                                        success: function (resulttheme) {
                                                            jQuery('#showimportprogress').html('Cache  Progress ....');
                                                            jQuery('.bar').attr('style', 'width:40%');
                                                            jQuery('.perc').html('40%');
                                                            jQuery.ajax
                                                                ({
                                                                    type: 'post',
                                                                    url: ajaxurl,
                                                                    dataType: 'JSON',
                                                                    data: { 'action': 'cacheimport', 'filename': importdatafilepath },
                                                                    success: function (resultcache) {
                                                                        jQuery('#showimportprogress').html('Plugins  Progress ....');
                                                                        jQuery('.bar').attr('style', 'width:60%');
                                                                        jQuery('.perc').html('60%');
                                                                        jQuery.ajax
                                                                            ({
                                                                                type: 'post',
                                                                                url: ajaxurl,
                                                                                dataType: 'JSON',
                                                                                data: { 'action': 'importplugin', 'filename': importdatafilepath },
                                                                                success: function (databaseresult) {
                                                                                    jQuery('#showimportprogress').html('Database  Progress ....');
                                                                                    jQuery('.bar').attr('style', 'width:80%');
                                                                                    jQuery('.perc').html('80%');
                                                                                    jQuery.ajax
                                                                                        ({
                                                                                            type: 'post',
                                                                                            url: ajaxurl,
                                                                                            dataType: 'JSON',
                                                                                            data: { 'action': 'databaseimport', 'filename': importdatafilepath, 'emaildomail': response.emaildomail, 'importfilename': importfilename, 'servertype': 'ftp' },
                                                                                            success: function (databaseresult) {
                                                                                                swal("Done", " Data Imported Successfully!", "success");
                                                                                                jQuery('#showimportprogress').html('Completed');
                                                                                                jQuery('.bar').attr('style', 'width:100%');
                                                                                                jQuery('.perc').html('100%');
                                                                                                jQuery('#myModal').modal('hide');
                                                                                                jQuery('#exampleModal').modal('hide');
                                                                                                debugger
                                                                                            }
                                                                                        })

                                                                                }
                                                                            })

                                                                    }
                                                                })
                                                        }
                                                    })

                                            }
                                        })
                                }
                            }
                        })

                }
            });
    }

}

jQuery(document).ready(function (event) {

    jQuery('#import_form').submit(function (event) {

        //jQuery('#show_loader_import').show();

        const formdata = new FormData(this)
        formdata.append('action', 'import');
        var importdatafilepath = '';
        var importfilename = '';
        let fileInput = document.getElementById('importfile')
        const file = fileInput.files[0];

        uploadFileInChunks(file, callback);
        jQuery('#importfile').val('');
        event.preventDefault()
    })
    jQuery(document).on("click", "#saveftpimport", function () {

        jQuery('#ftpmessage').html('');
        var recipient_name = jQuery('#recipient_nameimport').val();
        var ftpuser_name = jQuery('#ftpuser_nameimport').val();
        var ftppassword = jQuery('#ftppasswordimport').val();
        var ftpport = jQuery('#ftpportimport').val();
        var ftppath = jQuery('#ftppathimport').val();
        var id = jQuery('#ftpidimport').val();
        var servertype = jQuery('#servertypeimport').val();
        var filename = jQuery('#filename').val();
        var serverinfo = jQuery('#serverinfoimport').val();
        if (servertype == "") {
            alert('Please select Server Type');
            return false;

        }
        if (serverinfo == "personal") {

            if (recipient_name == "") {
                alert('Please Enter Host Name');
                return false;
            }
            else if (ftpuser_name == "") {
                alert('Please Enter User Name');
                return false;
            }
            else if (ftppassword == "") {
                alert('Please Enter Password');
                return false;
            }
            else if (ftpport == "") {
                alert('Please Enter Port No.');
                return false;
            }
            else if (ftppath == "") {
                alert('Please Enter Ftp Path');
                return false;
            }
        }

        if (servertype != "") {
            jQuery.ajax({
                type: 'post',
                url: ajaxurl,
                dataType: 'JSON',
                data: { 'action': 'saveftpcredentialimport', 'recipient_name': recipient_name, 'ftpuser_name': ftpuser_name, 'ftppassword': ftppassword, 'ftpport': ftpport, 'ftppath': ftppath, 'id': id, 'servertype': servertype, filename: filename, 'serverinfo': serverinfo },
                beforeSend: function () {
                    jQuery('#show_loader_import').show();
                },
                success: function (response) {

                    jQuery('#show_loader_import').hide();
                    if (response.success == true) {
                        jQuery('#ftpmessage').html(`<div class="alert alert-success"><strong>${servertype.toUpperCase()} Credential saved Success!</strong> .</div>`);
                        jQuery('#ftpimport_modal').modal('hide');
                        setTimeout(() => { importdata(response.data.file); }, 200);
                    }
                    else {
                        jQuery('#ftpmessage').html(`<div class="alert alert-danger">
                                                     <strong>${servertype.toUpperCase()} Wrong Credential !</strong> .
                                                     </div>`);
                    }
                }
            });
        }

    })
    jQuery(document).on('change', '#servertypeimport', function () {
        jQuery('#ftpmessage').html(``);
        var servertype = jQuery('#servertypeimport').val();
        var serverinfo = jQuery('#serverinfoimport').val();
        if (servertype == "") {
            return false;
        }
        jQuery('#show_loader_import').show();
        jQuery.ajax({
            type: 'post',
            url: ajaxurl,
            dataType: 'JSON',
            async: false,
            data: { 'action': 'getFTPCredential', servertype: servertype, serverinfo: serverinfo },
            success: function (response) {
                jQuery('#show_loader_import').hide();
                if (response.hasOwnProperty('data') && response.success == true) {

                    jQuery('#recipient_nameimport').val(response.data.hostname);
                    jQuery('#ftpuser_nameimport').val(response.data.username);
                    jQuery('#ftppasswordimport').val(response.data.password);
                    jQuery('#ftpportimport').val(response.data.port);
                    jQuery('#ftppathimport').val(response.data.ftppath);
                    jQuery('#ftpidimport').val(response.data.id);
                    jQuery('#saveftpimport').prop('disabled', false);
                    jQuery('#ftpmessage').html(``);
                }
                else {

                    jQuery('#saveftpimport').prop('disabled', true);
                    jQuery('#ftpmessage').html(`<div class="alert alert-danger">
                                                                        <strong>${response.data.msg} !</strong> .
                                                                    </div>`);
                }

            }
        });
    })

    jQuery('.restore_backup').on('click', function () {
        var file = jQuery(this).attr('attr');
        jQuery.ajax({
            type: 'post',
            url: ajaxurl,
            dataType: 'JSON',
            data: { 'action': 'restorebackup', 'file': file },
            beforeSend: function () {
                jQuery('.preloader').show();
            },
            success: function (response) {
                jQuery('.preloader').hide();
                if (response.success == true) {

                    jQuery('#ftpimport_modal').modal('hide');
                    setTimeout(() => { importdata(response.data.file); }, 200);
                }
                else {
                    alert('Something Went Wrong');
                }
            }
        });
    })
    jQuery('.restore_backupftp').on('click', function () {
        var file = jQuery(this).attr('attr');
        jQuery.ajax({
            type: 'post',
            url: ajaxurl,
            dataType: 'JSON',
            data: { 'action': 'restorebackupftp', 'file': file },
            beforeSend: function () {
                jQuery('.preloader').show();
            },
            success: function (response) {
                jQuery('.preloader').hide();
                if (response.success == true) {

                    jQuery('#ftpimport_modal').modal('hide');
                    setTimeout(() => { importdata(response.data.file); }, 200);
                }
                else {
                    alert('Something Went Wrong');
                }
            }
        });
    })
    function importdata(exportfile) {
        swal({
            title: "Are you sure?",
            text: "It will be cleaning your database files and upload new files and database",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    var importfilename = exportfile;
                    jQuery('#exampleModal').modal('show');
                    var no_email_domial = 0
                    if (document.getElementById('no_email_domial').checked == true) {
                        no_email_domial = 1;
                    }
                    jQuery('#showimportprogress').html(' Progress ....');
                    jQuery('.bar').attr('style', 'width:1%');
                    jQuery('.perc').html('1%');
                    var datavalue = {
                        'action': 'ImporBackup',
                        'emaildomail': no_email_domial,
                        'exportfilename': exportfile
                    };

                    jQuery.ajax
                        ({
                            type: 'post',
                            url: ajaxurl,
                            dataType: 'JSON',
                            data: datavalue,
                            success: function (responseimport) {
                                if (responseimport.data.status == 'success') {
                                    jQuery('#showimportprogress').html('Media Progress ....');
                                    jQuery('.bar').attr('style', 'width:2%');
                                    jQuery('.perc').html('2%');
                                    var importdatafilepath = responseimport.data.file;
                                    jQuery.ajax
                                        ({
                                            type: 'post',
                                            url: ajaxurl,
                                            dataType: 'JSON',
                                            data: { 'action': 'mediaimport', 'filename': importdatafilepath },
                                            success: function (resultmedia) {

                                                jQuery('#showimportprogress').html('Themes Progress ....');
                                                jQuery('.bar').attr('style', 'width:20%');
                                                jQuery('.perc').html('20%');
                                                jQuery.ajax
                                                    ({
                                                        type: 'post',
                                                        url: ajaxurl,
                                                        dataType: 'JSON',
                                                        data: { 'action': 'themeimport', 'filename': importdatafilepath },
                                                        success: function (resulttheme) {

                                                            jQuery('#showimportprogress').html('Cache Progress ....');
                                                            jQuery('.bar').attr('style', 'width:40%');
                                                            jQuery('.perc').html('40%');
                                                            jQuery.ajax
                                                                ({
                                                                    type: 'post',
                                                                    url: ajaxurl,
                                                                    dataType: 'JSON',
                                                                    data: { 'action': 'cacheimport', 'filename': importdatafilepath },
                                                                    success: function (resultcache) {

                                                                        jQuery('#showimportprogress').html('Plugins Progress ....');
                                                                        jQuery('.bar').attr('style', 'width:60%');
                                                                        jQuery('.perc').html('60%');
                                                                        jQuery.ajax
                                                                            ({
                                                                                type: 'post',
                                                                                url: ajaxurl,
                                                                                dataType: 'JSON',
                                                                                data: { 'action': 'importplugin', 'filename': importdatafilepath },
                                                                                success: function (databaseresult) {

                                                                                    jQuery('#showimportprogress').html('Database Progress ....');
                                                                                    jQuery('.bar').attr('style', 'width:80%');
                                                                                    jQuery('.perc').html('80%');
                                                                                    jQuery.ajax
                                                                                        ({
                                                                                            type: 'post',
                                                                                            url: ajaxurl,
                                                                                            dataType: 'JSON',
                                                                                            data: { 'action': 'databaseimport', 'filename': importdatafilepath, 'emaildomail': no_email_domial, 'importfilename': importfilename, 'servertype': 'ftp' },
                                                                                            success: function (databaseresult) {
                                                                                                swal("Done", " Data Imported Successfully!", "success");
                                                                                                jQuery('#showimportprogress').html('Completed');
                                                                                                jQuery('.bar').attr('style', 'width:100%');
                                                                                                jQuery('.perc').html('100%');
                                                                                                jQuery('#myModal').modal('hide');
                                                                                                jQuery('#exampleModal').modal('hide');

                                                                                            }
                                                                                        })

                                                                                }
                                                                            })

                                                                    }
                                                                })
                                                        }
                                                    })

                                            }
                                        })
                                }

                            }
                        })
                }
            });

    }

    jQuery("#importfile").change(function () {
        jQuery("#import_form").submit();
    });
});

jQuery(document).on('change', '#serverinfoimport', function () {
    jQuery('#recipient_nameimport').val('');
    jQuery('#ftpuser_nameimport').val('');
    jQuery('#ftppasswordimport').val('');
    jQuery('#ftpportimport').val('');
    jQuery('#ftppathimport').val('');
    jQuery('#filename').val('');
    var servertype = jQuery('#servertypeimport').val('');
    var serverinfo = jQuery('#serverinfoimport').val();
    if (serverinfo == "B-soft") {
        jQuery('.path_divimport').hide();
        jQuery('#servertypeimport option[value="ftp"]').hide();

    }
    else {
        jQuery('.path_divimport').show();
        jQuery('#servertypeimport option[value="ftp"]').show();
    }
})
jQuery(document).on('click', '#FTPimport', function () {
    jQuery('#recipient_nameimport').val('');
    jQuery('#ftpuser_nameimport').val('');
    jQuery('#ftppasswordimport').val('');
    jQuery('#ftpportimport').val('');
    jQuery('#ftppathimport').val('');
    jQuery('#servertypeimport').val('')
    jQuery('#filename').val('')
    jQuery('#serverinfoimport').val('personal');
    jQuery('#ftpmessage').html('');
    jQuery('.path_divimport').show();
    jQuery('#servertypeimport option[value="ftp"]').show();
})

//   const fileInput = document.getElementById('importfile');
//      fileInput.addEventListener('change', () => {
//      const file = fileInput.files[0];
//        uploadFileInChunks(file);
//      });
function uploadFileInChunks(file, cb) {
    const chunkSize = 1024 * 1024; // 1MB chunks
    const totalChunks = Math.ceil(file.size / chunkSize);
    const size = file.size;
    let currentChunk = 0;
    const uploadChunk = () => {
        const start = currentChunk * chunkSize;
        const end = Math.min(start + chunkSize, file.size);
        const chunk = file.slice(start, end);
        const formData = new FormData();
        formData.append('file', chunk);
        formData.append('filename', file.name);
        formData.append('ext', file.name.split('.').pop());
        formData.append('chunk', currentChunk);
        formData.append('totalChunks', totalChunks);
        formData.append('action', 'import');

        const xhr = new XMLHttpRequest();
        xhr.upload.onprogress = e => {
            
            let percentage = Math.floor(((start + e.loaded) / size)*100);   
            jQuery('#exampleModal').modal('show');
            jQuery('#showimportprogress').html('Upload in Progress ....');
            jQuery('.bar').attr('style', 'width:'+percentage+'%');
            jQuery('.perc').html(percentage+'%');
        }
        xhr.open('POST', ajaxurl, true);
        xhr.onload = () => {

            currentChunk++;
            if (currentChunk < totalChunks) {
                uploadChunk();
            } else {
                // All chunks have been uploaded, finalize the upload
                finalizeUpload();
            }
        };
        xhr.send(formData);
    };

    const finalizeUpload = () => {
        const formData = new FormData();
        formData.append('filename', file.name);
        formData.append('totalChunks', totalChunks);
        formData.append('action', 'merge');
        const xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (xhr.readyState == XMLHttpRequest.DONE) {
                if (xhr.responseText) {
                    //debugger
                    try {
                        //debugger
                        const status = JSON.parse(xhr.responseText)
                        cb(status)
                    }
                    catch (err) {
                        debugger
                    }

                }
                // alert(xhr.responseText);
            }
        }
        xhr.open('POST', ajaxurl, true);
        xhr.onload = () => {
            console.log('File upload complete!');
        };
        xhr.send(formData);
    };

    uploadChunk();
}
